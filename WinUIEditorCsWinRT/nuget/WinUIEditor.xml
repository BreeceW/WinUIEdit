<?xml version="1.0" encoding="utf-8"?>
<doc>
    <assembly>
        <name>WinUIEditor</name>
    </assembly>
    <members>
        <member name="M:WinUIEditor.Editor.AddTextFromBuffer(System.Int64,Windows.Storage.Streams.IBuffer)">
            <summary>Add text to the document at current position.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.AddText(System.Int64,System.String)">
            <summary>Add text to the document at current position.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.AddStyledText(System.Int64,System.Byte[])">
            <summary>Add array of cells to document.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.InsertTextFromBuffer(System.Int64,Windows.Storage.Streams.IBuffer)">
            <summary>Insert string at a position.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.InsertText(System.Int64,System.String)">
            <summary>Insert string at a position.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.ChangeInsertionFromBuffer(System.Int64,Windows.Storage.Streams.IBuffer)">
            <summary>Change the text that is being inserted in response to SC_MOD_INSERTCHECK</summary>
        </member>
        <member name="M:WinUIEditor.Editor.ChangeInsertion(System.Int64,System.String)">
            <summary>Change the text that is being inserted in response to SC_MOD_INSERTCHECK</summary>
        </member>
        <member name="M:WinUIEditor.Editor.ClearAll">
            <summary>Delete all text in the document.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.DeleteRange(System.Int64,System.Int64)">
            <summary>Delete a range of text in the document.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.ClearDocumentStyle">
            <summary>Set all style bytes to 0, remove all folding information.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.Redo">
            <summary>Redoes the next action on the undo history.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.SelectAll">
            <summary>Select all the text in the document.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.SetSavePoint">
            <summary>Remember the current position in the undo history as the position
at which the document was saved.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.GetStyledText(System.UInt64)">
            <summary>Retrieve a buffer of cells.
Returns the number of bytes in the buffer not including terminating NULs.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.GetStyledTextFull(System.UInt64)">
            <summary>Retrieve a buffer of cells that can be past 2GB.
Returns the number of bytes in the buffer not including terminating NULs.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.CanRedo">
            <summary>Are there any redoable actions in the undo history?</summary>
        </member>
        <member name="M:WinUIEditor.Editor.MarkerLineFromHandle(System.Int32)">
            <summary>Retrieve the line number at which a particular marker is located.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.MarkerDeleteHandle(System.Int32)">
            <summary>Delete a marker.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.MarkerHandleFromLine(System.Int64,System.Int32)">
            <summary>Retrieve marker handles of a line</summary>
        </member>
        <member name="M:WinUIEditor.Editor.MarkerNumberFromLine(System.Int64,System.Int32)">
            <summary>Retrieve marker number of a marker handle</summary>
        </member>
        <member name="M:WinUIEditor.Editor.PositionFromPoint(System.Int32,System.Int32)">
            <summary>Find the position from a point within the window.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.PositionFromPointClose(System.Int32,System.Int32)">
            <summary>Find the position from a point within the window but return
INVALID_POSITION if not close to text.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.GotoLine(System.Int64)">
            <summary>Set caret to start of a line and ensure it is visible.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.GotoPos(System.Int64)">
            <summary>Set caret to a position and ensure it is visible.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.GetCurLineWriteBuffer(System.Int64,Windows.Storage.Streams.IBuffer)">
            <summary>Retrieve the text of the line containing the caret.
Returns the index of the caret on the line.
Result is NUL-terminated.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.GetCurLine(System.Int64)">
            <summary>Retrieve the text of the line containing the caret.
Returns the index of the caret on the line.
Result is NUL-terminated.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.ConvertEOLs(WinUIEditor.EndOfLine)">
            <summary>Convert all line endings in the document to one mode.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.StartStyling(System.Int64,System.Int32)">
            <summary>Set the current styling position to start.
The unused parameter is no longer used and should be set to 0.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.SetStyling(System.Int64,System.Int32)">
            <summary>Change style from current styling position for length characters to a style
and move the current styling position to after this newly styled segment.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.ClearTabStops(System.Int64)">
            <summary>Clear explicit tabstops on a line.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.AddTabStop(System.Int64,System.Int32)">
            <summary>Add an explicit tab stop for a line.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.GetNextTabStop(System.Int64,System.Int32)">
            <summary>Find the next explicit tab stop position on a line after a position.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.MarkerDefine(System.Int32,WinUIEditor.MarkerSymbol)">
            <summary>Set the symbol used for a particular marker number.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.MarkerEnableHighlight(System.Boolean)">
            <summary>Enable/disable highlight for current folding block (smallest one that contains the caret)</summary>
        </member>
        <member name="M:WinUIEditor.Editor.MarkerAdd(System.Int64,System.Int32)">
            <summary>Add a marker to a line, returning an ID which can be used to find or delete the marker.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.MarkerDelete(System.Int64,System.Int32)">
            <summary>Delete a marker from a line.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.MarkerDeleteAll(System.Int32)">
            <summary>Delete all markers with a particular number from all lines.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.MarkerGet(System.Int64)">
            <summary>Get a bit mask of all the markers set on a line.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.MarkerNext(System.Int64,System.Int32)">
            <summary>Find the next line at or after lineStart that includes a marker in mask.
Return -1 when no more lines.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.MarkerPrevious(System.Int64,System.Int32)">
            <summary>Find the previous line before lineStart that includes a marker in mask.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.MarkerDefinePixmapFromBuffer(System.Int32,Windows.Storage.Streams.IBuffer)">
            <summary>Define a marker from a pixmap.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.MarkerDefinePixmap(System.Int32,System.String)">
            <summary>Define a marker from a pixmap.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.MarkerAddSet(System.Int64,System.Int32)">
            <summary>Add a set of markers to a line.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.StyleClearAll">
            <summary>Clear all the styles and make equivalent to the global default style.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.StyleResetDefault">
            <summary>Reset the default style to its state at startup</summary>
        </member>
        <member name="M:WinUIEditor.Editor.ResetElementColour(WinUIEditor.Element)">
            <summary>Use the default or platform-defined colour for an element.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.SetSelFore(System.Boolean,System.Int32)">
            <summary>Set the foreground colour of the main and additional selections and whether to use this setting.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.SetSelBack(System.Boolean,System.Int32)">
            <summary>Set the background colour of the main and additional selections and whether to use this setting.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.AssignCmdKey(System.Int32,System.Int32)">
            <summary>When key+modifier combination keyDefinition is pressed perform sciCommand.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.ClearCmdKey(System.Int32)">
            <summary>When key+modifier combination keyDefinition is pressed do nothing.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.ClearAllCmdKeys">
            <summary>Drop all key mappings.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.SetStylingExFromBuffer(System.Int64,Windows.Storage.Streams.IBuffer)">
            <summary>Set the styles for a segment of the document.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.SetStylingEx(System.Int64,System.String)">
            <summary>Set the styles for a segment of the document.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.BeginUndoAction">
            <summary>Start a sequence of actions that is undone and redone as a unit.
May be nested.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.EndUndoAction">
            <summary>End a sequence of actions that is undone and redone as a unit.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.PushUndoActionType(System.Int32,System.Int64)">
            <summary>Push one action onto undo history with no text</summary>
        </member>
        <member name="M:WinUIEditor.Editor.ChangeLastUndoActionTextFromBuffer(System.Int64,Windows.Storage.Streams.IBuffer)">
            <summary>Set the text and length of the most recently pushed action</summary>
        </member>
        <member name="M:WinUIEditor.Editor.ChangeLastUndoActionText(System.Int64,System.String)">
            <summary>Set the text and length of the most recently pushed action</summary>
        </member>
        <member name="M:WinUIEditor.Editor.SetWhitespaceFore(System.Boolean,System.Int32)">
            <summary>Set the foreground colour of all whitespace and whether to use this setting.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.SetWhitespaceBack(System.Boolean,System.Int32)">
            <summary>Set the background colour of all whitespace and whether to use this setting.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.AutoCShowFromBuffer(System.Int64,Windows.Storage.Streams.IBuffer)">
            <summary>Display a auto-completion list.
The lengthEntered parameter indicates how many characters before
the caret should be used to provide context.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.AutoCShow(System.Int64,System.String)">
            <summary>Display a auto-completion list.
The lengthEntered parameter indicates how many characters before
the caret should be used to provide context.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.AutoCCancel">
            <summary>Remove the auto-completion list from the screen.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.AutoCActive">
            <summary>Is there an auto-completion list visible?</summary>
        </member>
        <member name="M:WinUIEditor.Editor.AutoCPosStart">
            <summary>Retrieve the position of the caret when the auto-completion list was displayed.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.AutoCComplete">
            <summary>User has selected an item so remove the list and insert the selection.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.AutoCStopsFromBuffer(Windows.Storage.Streams.IBuffer)">
            <summary>Define a set of character that when typed cancel the auto-completion list.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.AutoCStops(System.String)">
            <summary>Define a set of character that when typed cancel the auto-completion list.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.AutoCSelectFromBuffer(Windows.Storage.Streams.IBuffer)">
            <summary>Select the item in the auto-completion list that starts with a string.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.AutoCSelect(System.String)">
            <summary>Select the item in the auto-completion list that starts with a string.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.UserListShowFromBuffer(System.Int32,Windows.Storage.Streams.IBuffer)">
            <summary>Display a list of strings and send notification when user chooses one.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.UserListShow(System.Int32,System.String)">
            <summary>Display a list of strings and send notification when user chooses one.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.RegisterImageFromBuffer(System.Int32,Windows.Storage.Streams.IBuffer)">
            <summary>Register an XPM image for use in autocompletion lists.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.RegisterImage(System.Int32,System.String)">
            <summary>Register an XPM image for use in autocompletion lists.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.ClearRegisteredImages">
            <summary>Clear all the registered XPM images.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.CountCharacters(System.Int64,System.Int64)">
            <summary>Count characters between two positions.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.CountCodeUnits(System.Int64,System.Int64)">
            <summary>Count code units between two positions.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.SetEmptySelection(System.Int64)">
            <summary>Set caret to a position, while removing any existing selection.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.FindText(WinUIEditor.FindOption,System.UInt64)">
            <summary>Find some text in the document.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.FindTextFull(WinUIEditor.FindOption,System.UInt64)">
            <summary>Find some text in the document.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.FormatRange(System.Boolean,System.UInt64)">
            <summary>Draw the document into a display context such as a printer.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.FormatRangeFull(System.Boolean,System.UInt64)">
            <summary>Draw the document into a display context such as a printer.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.GetLineWriteBuffer(System.Int64,Windows.Storage.Streams.IBuffer)">
            <summary>Retrieve the contents of a line.
Returns the length of the line.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.GetLine(System.Int64)">
            <summary>Retrieve the contents of a line.
Returns the length of the line.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.SetSel(System.Int64,System.Int64)">
            <summary>Select a range of text.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.GetSelTextWriteBuffer(Windows.Storage.Streams.IBuffer)">
            <summary>Retrieve the selected text.
Return the length of the text.
Result is NUL-terminated.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.GetSelText">
            <summary>Retrieve the selected text.
Return the length of the text.
Result is NUL-terminated.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.GetTextRange(System.UInt64)">
            <summary>Retrieve a range of text.
Return the length of the text.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.GetTextRangeFull(System.UInt64)">
            <summary>Retrieve a range of text that can be past 2GB.
Return the length of the text.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.HideSelection(System.Boolean)">
            <summary>Draw the selection either highlighted or in normal (non-highlighted) style.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.PointXFromPosition(System.Int64)">
            <summary>Retrieve the x value of the point in the window where a position is displayed.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.PointYFromPosition(System.Int64)">
            <summary>Retrieve the y value of the point in the window where a position is displayed.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.LineFromPosition(System.Int64)">
            <summary>Retrieve the line containing a position.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.PositionFromLine(System.Int64)">
            <summary>Retrieve the position at the start of a line.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.LineScroll(System.Int64,System.Int64)">
            <summary>Scroll horizontally and vertically.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.ScrollCaret">
            <summary>Ensure the caret is visible.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.ScrollRange(System.Int64,System.Int64)">
            <summary>Scroll the argument positions and the range between them into view giving
priority to the primary position then the secondary position.
This may be used to make a search match visible.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.ReplaceSelFromBuffer(Windows.Storage.Streams.IBuffer)">
            <summary>Replace the selected text with the argument text.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.ReplaceSel(System.String)">
            <summary>Replace the selected text with the argument text.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.Null">
            <summary>Null operation.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.CanPaste">
            <summary>Will a paste succeed?</summary>
        </member>
        <member name="M:WinUIEditor.Editor.CanUndo">
            <summary>Are there any undoable actions in the undo history?</summary>
        </member>
        <member name="M:WinUIEditor.Editor.EmptyUndoBuffer">
            <summary>Delete the undo history.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.Undo">
            <summary>Undo one action in the undo history.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.Cut">
            <summary>Cut the selection to the clipboard.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.Copy">
            <summary>Copy the selection to the clipboard.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.Paste">
            <summary>Paste the contents of the clipboard into the document replacing the selection.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.Clear">
            <summary>Clear the selection.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.SetTextFromBuffer(Windows.Storage.Streams.IBuffer)">
            <summary>Replace the contents of the document with the argument text.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.SetText(System.String)">
            <summary>Replace the contents of the document with the argument text.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.GetTextWriteBuffer(System.Int64,Windows.Storage.Streams.IBuffer)">
            <summary>Retrieve all the text in the document.
Returns number of characters retrieved.
Result is NUL-terminated.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.GetText(System.Int64)">
            <summary>Retrieve all the text in the document.
Returns number of characters retrieved.
Result is NUL-terminated.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.SetTargetRange(System.Int64,System.Int64)">
            <summary>Sets both the start and end of the target in one call.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.TargetFromSelection">
            <summary>Make the target range start and end be the same as the selection range start and end.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.TargetWholeDocument">
            <summary>Sets the target to the whole document.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.ReplaceTargetFromBuffer(System.Int64,Windows.Storage.Streams.IBuffer)">
            <summary>Replace the target text with the argument text.
Text is counted so it can contain NULs.
Returns the length of the replacement text.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.ReplaceTarget(System.Int64,System.String)">
            <summary>Replace the target text with the argument text.
Text is counted so it can contain NULs.
Returns the length of the replacement text.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.ReplaceTargetREFromBuffer(System.Int64,Windows.Storage.Streams.IBuffer)">
            <summary>Replace the target text with the argument text after \d processing.
Text is counted so it can contain NULs.
Looks for \d where d is between 1 and 9 and replaces these with the strings
matched in the last search operation which were surrounded by \( and \).
Returns the length of the replacement text including any change
caused by processing the \d patterns.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.ReplaceTargetRE(System.Int64,System.String)">
            <summary>Replace the target text with the argument text after \d processing.
Text is counted so it can contain NULs.
Looks for \d where d is between 1 and 9 and replaces these with the strings
matched in the last search operation which were surrounded by \( and \).
Returns the length of the replacement text including any change
caused by processing the \d patterns.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.ReplaceTargetMinimalFromBuffer(System.Int64,Windows.Storage.Streams.IBuffer)">
            <summary>Replace the target text with the argument text but ignore prefix and suffix that
are the same as current.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.ReplaceTargetMinimal(System.Int64,System.String)">
            <summary>Replace the target text with the argument text but ignore prefix and suffix that
are the same as current.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.SearchInTargetFromBuffer(System.Int64,Windows.Storage.Streams.IBuffer)">
            <summary>Search for a counted string in the target and set the target to the found
range. Text is counted so it can contain NULs.
Returns start of found range or -1 for failure in which case target is not moved.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.SearchInTarget(System.Int64,System.String)">
            <summary>Search for a counted string in the target and set the target to the found
range. Text is counted so it can contain NULs.
Returns start of found range or -1 for failure in which case target is not moved.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.CallTipShowFromBuffer(System.Int64,Windows.Storage.Streams.IBuffer)">
            <summary>Show a call tip containing a definition near position pos.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.CallTipShow(System.Int64,System.String)">
            <summary>Show a call tip containing a definition near position pos.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.CallTipCancel">
            <summary>Remove the call tip from the screen.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.CallTipActive">
            <summary>Is there an active call tip?</summary>
        </member>
        <member name="M:WinUIEditor.Editor.CallTipPosStart">
            <summary>Retrieve the position where the caret was before displaying the call tip.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.CallTipSetHlt(System.Int64,System.Int64)">
            <summary>Highlight a segment of the definition.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.VisibleFromDocLine(System.Int64)">
            <summary>Find the display line of a document line taking hidden lines into account.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.DocLineFromVisible(System.Int64)">
            <summary>Find the document line of a display line taking hidden lines into account.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.WrapCount(System.Int64)">
            <summary>The number of display lines needed to wrap a document line</summary>
        </member>
        <member name="M:WinUIEditor.Editor.ShowLines(System.Int64,System.Int64)">
            <summary>Make a range of lines visible.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.HideLines(System.Int64,System.Int64)">
            <summary>Make a range of lines invisible.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.ToggleFold(System.Int64)">
            <summary>Switch a header line between expanded and contracted.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.ToggleFoldShowTextFromBuffer(System.Int64,Windows.Storage.Streams.IBuffer)">
            <summary>Switch a header line between expanded and contracted and show some text after the line.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.ToggleFoldShowText(System.Int64,System.String)">
            <summary>Switch a header line between expanded and contracted and show some text after the line.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.SetDefaultFoldDisplayTextFromBuffer(Windows.Storage.Streams.IBuffer)">
            <summary>Set the default fold display text.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.SetDefaultFoldDisplayText(System.String)">
            <summary>Set the default fold display text.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.GetDefaultFoldDisplayTextWriteBuffer(Windows.Storage.Streams.IBuffer)">
            <summary>Get the default fold display text.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.GetDefaultFoldDisplayText">
            <summary>Get the default fold display text.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.FoldLine(System.Int64,WinUIEditor.FoldAction)">
            <summary>Expand or contract a fold header.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.FoldChildren(System.Int64,WinUIEditor.FoldAction)">
            <summary>Expand or contract a fold header and its children.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.ExpandChildren(System.Int64,WinUIEditor.FoldLevel)">
            <summary>Expand a fold header and all children. Use the level argument instead of the line&apos;s current level.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.FoldAll(WinUIEditor.FoldAction)">
            <summary>Expand or contract all fold headers.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.EnsureVisible(System.Int64)">
            <summary>Ensure a particular line is visible by expanding any header line hiding it.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.EnsureVisibleEnforcePolicy(System.Int64)">
            <summary>Ensure a particular line is visible by expanding any header line hiding it.
Use the currently set visibility policy to determine which range to display.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.WordStartPosition(System.Int64,System.Boolean)">
            <summary>Get position of start of word.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.WordEndPosition(System.Int64,System.Boolean)">
            <summary>Get position of end of word.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.IsRangeWord(System.Int64,System.Int64)">
            <summary>Is the range start..end considered a word?</summary>
        </member>
        <member name="M:WinUIEditor.Editor.TextWidthFromBuffer(System.Int32,Windows.Storage.Streams.IBuffer)">
            <summary>Measure the pixel width of some text in a particular style.
NUL terminated text argument.
Does not handle tab or control characters.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.TextWidth(System.Int32,System.String)">
            <summary>Measure the pixel width of some text in a particular style.
NUL terminated text argument.
Does not handle tab or control characters.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.TextHeight(System.Int64)">
            <summary>Retrieve the height of a particular line of text in pixels.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.AppendTextFromBuffer(System.Int64,Windows.Storage.Streams.IBuffer)">
            <summary>Append a string to the end of the document without changing the selection.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.AppendText(System.Int64,System.String)">
            <summary>Append a string to the end of the document without changing the selection.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.LinesJoin">
            <summary>Join the lines in the target.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.LinesSplit(System.Int32)">
            <summary>Split the lines in the target into lines that are less wide than pixelWidth
where possible.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.SetFoldMarginColour(System.Boolean,System.Int32)">
            <summary>Set one of the colours used as a chequerboard pattern in the fold margin</summary>
        </member>
        <member name="M:WinUIEditor.Editor.SetFoldMarginHiColour(System.Boolean,System.Int32)">
            <summary>Set the other colour used as a chequerboard pattern in the fold margin</summary>
        </member>
        <member name="M:WinUIEditor.Editor.LineDown">
            <summary>Move caret down one line.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.LineDownExtend">
            <summary>Move caret down one line extending selection to new caret position.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.LineUp">
            <summary>Move caret up one line.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.LineUpExtend">
            <summary>Move caret up one line extending selection to new caret position.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.CharLeft">
            <summary>Move caret left one character.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.CharLeftExtend">
            <summary>Move caret left one character extending selection to new caret position.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.CharRight">
            <summary>Move caret right one character.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.CharRightExtend">
            <summary>Move caret right one character extending selection to new caret position.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.WordLeft">
            <summary>Move caret left one word.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.WordLeftExtend">
            <summary>Move caret left one word extending selection to new caret position.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.WordRight">
            <summary>Move caret right one word.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.WordRightExtend">
            <summary>Move caret right one word extending selection to new caret position.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.Home">
            <summary>Move caret to first position on line.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.HomeExtend">
            <summary>Move caret to first position on line extending selection to new caret position.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.LineEnd">
            <summary>Move caret to last position on line.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.LineEndExtend">
            <summary>Move caret to last position on line extending selection to new caret position.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.DocumentStart">
            <summary>Move caret to first position in document.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.DocumentStartExtend">
            <summary>Move caret to first position in document extending selection to new caret position.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.DocumentEnd">
            <summary>Move caret to last position in document.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.DocumentEndExtend">
            <summary>Move caret to last position in document extending selection to new caret position.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.PageUp">
            <summary>Move caret one page up.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.PageUpExtend">
            <summary>Move caret one page up extending selection to new caret position.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.PageDown">
            <summary>Move caret one page down.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.PageDownExtend">
            <summary>Move caret one page down extending selection to new caret position.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.EditToggleOvertype">
            <summary>Switch from insert to overtype mode or the reverse.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.Cancel">
            <summary>Cancel any modes such as call tip or auto-completion list display.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.DeleteBack">
            <summary>Delete the selection or if no selection, the character before the caret.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.Tab">
            <summary>If selection is empty or all on one line replace the selection with a tab character.
If more than one line selected, indent the lines.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.LineIndent">
            <summary>Indent the current and selected lines.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.BackTab">
            <summary>If selection is empty or all on one line dedent the line if caret is at start, else move caret.
If more than one line selected, dedent the lines.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.LineDedent">
            <summary>Dedent the current and selected lines.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.NewLine">
            <summary>Insert a new line, may use a CRLF, CR or LF depending on EOL mode.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.FormFeed">
            <summary>Insert a Form Feed character.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.VCHome">
            <summary>Move caret to before first visible character on line.
If already there move to first character on line.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.VCHomeExtend">
            <summary>Like VCHome but extending selection to new caret position.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.ZoomIn">
            <summary>Magnify the displayed text by increasing the sizes by 1 point.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.ZoomOut">
            <summary>Make the displayed text smaller by decreasing the sizes by 1 point.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.DelWordLeft">
            <summary>Delete the word to the left of the caret.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.DelWordRight">
            <summary>Delete the word to the right of the caret.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.DelWordRightEnd">
            <summary>Delete the word to the right of the caret, but not the trailing non-word characters.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.LineCut">
            <summary>Cut the line containing the caret.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.LineDelete">
            <summary>Delete the line containing the caret.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.LineTranspose">
            <summary>Switch the current line with the previous.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.LineReverse">
            <summary>Reverse order of selected lines.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.LineDuplicate">
            <summary>Duplicate the current line.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.LowerCase">
            <summary>Transform the selection to lower case.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.UpperCase">
            <summary>Transform the selection to upper case.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.LineScrollDown">
            <summary>Scroll the document down, keeping the caret visible.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.LineScrollUp">
            <summary>Scroll the document up, keeping the caret visible.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.DeleteBackNotLine">
            <summary>Delete the selection or if no selection, the character before the caret.
Will not delete the character before at the start of a line.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.HomeDisplay">
            <summary>Move caret to first position on display line.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.HomeDisplayExtend">
            <summary>Move caret to first position on display line extending selection to
new caret position.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.LineEndDisplay">
            <summary>Move caret to last position on display line.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.LineEndDisplayExtend">
            <summary>Move caret to last position on display line extending selection to new
caret position.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.HomeWrap">
            <summary>Like Home but when word-wrap is enabled goes first to start of display line
HomeDisplay, then to start of document line Home.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.HomeWrapExtend">
            <summary>Like HomeExtend but when word-wrap is enabled extends first to start of display line
HomeDisplayExtend, then to start of document line HomeExtend.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.LineEndWrap">
            <summary>Like LineEnd but when word-wrap is enabled goes first to end of display line
LineEndDisplay, then to start of document line LineEnd.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.LineEndWrapExtend">
            <summary>Like LineEndExtend but when word-wrap is enabled extends first to end of display line
LineEndDisplayExtend, then to start of document line LineEndExtend.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.VCHomeWrap">
            <summary>Like VCHome but when word-wrap is enabled goes first to start of display line
VCHomeDisplay, then behaves like VCHome.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.VCHomeWrapExtend">
            <summary>Like VCHomeExtend but when word-wrap is enabled extends first to start of display line
VCHomeDisplayExtend, then behaves like VCHomeExtend.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.LineCopy">
            <summary>Copy the line containing the caret.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.MoveCaretInsideView">
            <summary>Move the caret inside current view if it&apos;s not there already.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.LineLength(System.Int64)">
            <summary>How many characters are on a line, including end of line characters?</summary>
        </member>
        <member name="M:WinUIEditor.Editor.BraceHighlight(System.Int64,System.Int64)">
            <summary>Highlight the characters at two positions.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.BraceHighlightIndicator(System.Boolean,System.Int32)">
            <summary>Use specified indicator to highlight matching braces instead of changing their style.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.BraceBadLight(System.Int64)">
            <summary>Highlight the character at a position indicating there is no matching brace.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.BraceBadLightIndicator(System.Boolean,System.Int32)">
            <summary>Use specified indicator to highlight non matching brace instead of changing its style.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.BraceMatch(System.Int64,System.Int32)">
            <summary>Find the position of a matching brace or INVALID_POSITION if no match.
The maxReStyle must be 0 for now. It may be defined in a future release.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.BraceMatchNext(System.Int64,System.Int64)">
            <summary>Similar to BraceMatch, but matching starts at the explicit start position.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.MultiEdgeAddLine(System.Int64,System.Int32)">
            <summary>Add a new vertical edge to the view.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.MultiEdgeClearAll">
            <summary>Clear all vertical edges.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.SearchAnchor">
            <summary>Sets the current caret position to be the search anchor.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.SearchNextFromBuffer(WinUIEditor.FindOption,Windows.Storage.Streams.IBuffer)">
            <summary>Find some text starting at the search anchor.
Does not ensure the selection is visible.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.SearchNext(WinUIEditor.FindOption,System.String)">
            <summary>Find some text starting at the search anchor.
Does not ensure the selection is visible.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.SearchPrevFromBuffer(WinUIEditor.FindOption,Windows.Storage.Streams.IBuffer)">
            <summary>Find some text starting at the search anchor and moving backwards.
Does not ensure the selection is visible.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.SearchPrev(WinUIEditor.FindOption,System.String)">
            <summary>Find some text starting at the search anchor and moving backwards.
Does not ensure the selection is visible.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.UsePopUp(WinUIEditor.PopUp)">
            <summary>Set whether a pop up menu is displayed automatically when the user presses
the wrong mouse button on certain areas.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.CreateDocument(System.Int64,WinUIEditor.DocumentOption)">
            <summary>Create a new document object.
Starts with reference count of 1 and not selected into editor.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.AddRefDocument(System.UInt64)">
            <summary>Extend life of document.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.ReleaseDocument(System.UInt64)">
            <summary>Release a reference to the document, deleting document if it fades to black.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.WordPartLeft">
            <summary>Move to the previous change in capitalisation.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.WordPartLeftExtend">
            <summary>Move to the previous change in capitalisation extending selection
to new caret position.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.WordPartRight">
            <summary>Move to the change next in capitalisation.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.WordPartRightExtend">
            <summary>Move to the next change in capitalisation extending selection
to new caret position.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.SetVisiblePolicy(WinUIEditor.VisiblePolicy,System.Int32)">
            <summary>Set the way the display area is determined when a particular line
is to be moved to by Find, FindNext, GotoLine, etc.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.DelLineLeft">
            <summary>Delete back from the current position to the start of the line.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.DelLineRight">
            <summary>Delete forwards from the current position to the end of the line.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.ChooseCaretX">
            <summary>Set the last x chosen value to be the caret x position.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.GrabFocus">
            <summary>Set the focus to this Scintilla widget.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.SetXCaretPolicy(WinUIEditor.CaretPolicy,System.Int32)">
            <summary>Set the way the caret is kept visible when going sideways.
The exclusion zone is given in pixels.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.SetYCaretPolicy(WinUIEditor.CaretPolicy,System.Int32)">
            <summary>Set the way the line the caret is on is kept visible.
The exclusion zone is given in lines.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.ParaDown">
            <summary>Move caret down one paragraph (delimited by empty lines).</summary>
        </member>
        <member name="M:WinUIEditor.Editor.ParaDownExtend">
            <summary>Extend selection down one paragraph (delimited by empty lines).</summary>
        </member>
        <member name="M:WinUIEditor.Editor.ParaUp">
            <summary>Move caret up one paragraph (delimited by empty lines).</summary>
        </member>
        <member name="M:WinUIEditor.Editor.ParaUpExtend">
            <summary>Extend selection up one paragraph (delimited by empty lines).</summary>
        </member>
        <member name="M:WinUIEditor.Editor.PositionBefore(System.Int64)">
            <summary>Given a valid document position, return the previous position taking code
page into account. Returns 0 if passed 0.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.PositionAfter(System.Int64)">
            <summary>Given a valid document position, return the next position taking code
page into account. Maximum value returned is the last position in the document.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.PositionRelative(System.Int64,System.Int64)">
            <summary>Given a valid document position, return a position that differs in a number
of characters. Returned value is always between 0 and last position in document.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.PositionRelativeCodeUnits(System.Int64,System.Int64)">
            <summary>Given a valid document position, return a position that differs in a number
of UTF-16 code units. Returned value is always between 0 and last position in document.
The result may point half way (2 bytes) inside a non-BMP character.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.CopyRange(System.Int64,System.Int64)">
            <summary>Copy a range of text to the clipboard. Positions are clipped into the document.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.CopyTextFromBuffer(System.Int64,Windows.Storage.Streams.IBuffer)">
            <summary>Copy argument text to the clipboard.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.CopyText(System.Int64,System.String)">
            <summary>Copy argument text to the clipboard.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.ChangeSelectionMode(WinUIEditor.SelectionMode)">
            <summary>Set the selection mode to stream (SC_SEL_STREAM) or rectangular (SC_SEL_RECTANGLE/SC_SEL_THIN) or
by lines (SC_SEL_LINES) without changing MoveExtendsSelection.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.GetLineSelStartPosition(System.Int64)">
            <summary>Retrieve the position of the start of the selection at the given line (INVALID_POSITION if no selection on this line).</summary>
        </member>
        <member name="M:WinUIEditor.Editor.GetLineSelEndPosition(System.Int64)">
            <summary>Retrieve the position of the end of the selection at the given line (INVALID_POSITION if no selection on this line).</summary>
        </member>
        <member name="M:WinUIEditor.Editor.LineDownRectExtend">
            <summary>Move caret down one line, extending rectangular selection to new caret position.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.LineUpRectExtend">
            <summary>Move caret up one line, extending rectangular selection to new caret position.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.CharLeftRectExtend">
            <summary>Move caret left one character, extending rectangular selection to new caret position.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.CharRightRectExtend">
            <summary>Move caret right one character, extending rectangular selection to new caret position.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.HomeRectExtend">
            <summary>Move caret to first position on line, extending rectangular selection to new caret position.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.VCHomeRectExtend">
            <summary>Move caret to before first visible character on line.
If already there move to first character on line.
In either case, extend rectangular selection to new caret position.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.LineEndRectExtend">
            <summary>Move caret to last position on line, extending rectangular selection to new caret position.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.PageUpRectExtend">
            <summary>Move caret one page up, extending rectangular selection to new caret position.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.PageDownRectExtend">
            <summary>Move caret one page down, extending rectangular selection to new caret position.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.StutteredPageUp">
            <summary>Move caret to top of page, or one page up if already at top of page.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.StutteredPageUpExtend">
            <summary>Move caret to top of page, or one page up if already at top of page, extending selection to new caret position.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.StutteredPageDown">
            <summary>Move caret to bottom of page, or one page down if already at bottom of page.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.StutteredPageDownExtend">
            <summary>Move caret to bottom of page, or one page down if already at bottom of page, extending selection to new caret position.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.WordLeftEnd">
            <summary>Move caret left one word, position cursor at end of word.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.WordLeftEndExtend">
            <summary>Move caret left one word, position cursor at end of word, extending selection to new caret position.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.WordRightEnd">
            <summary>Move caret right one word, position cursor at end of word.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.WordRightEndExtend">
            <summary>Move caret right one word, position cursor at end of word, extending selection to new caret position.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.SetCharsDefault">
            <summary>Reset the set of characters for whitespace and word characters to the defaults.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.Allocate(System.Int64)">
            <summary>Enlarge the document to a particular size of text bytes.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.TargetAsUTF8WriteBuffer(Windows.Storage.Streams.IBuffer)">
            <summary>Returns the target converted to UTF8.
Return the length in bytes.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.TargetAsUTF8">
            <summary>Returns the target converted to UTF8.
Return the length in bytes.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.SetLengthForEncode(System.Int64)">
            <summary>Set the length of the utf8 argument for calling EncodedFromUTF8.
Set to -1 and the string will be measured to the first nul.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.EncodedFromUTF8WriteBuffer(Windows.Storage.Streams.IBuffer,Windows.Storage.Streams.IBuffer)">
            <summary>Translates a UTF8 string into the document encoding.
Return the length of the result in bytes.
On error return 0.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.EncodedFromUTF8(System.String)">
            <summary>Translates a UTF8 string into the document encoding.
Return the length of the result in bytes.
On error return 0.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.FindColumn(System.Int64,System.Int64)">
            <summary>Find the position of a column on a line taking into account tabs and
multi-byte characters. If beyond end of line, return line end position.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.ToggleCaretSticky">
            <summary>Switch between sticky and non-sticky: meant to be bound to a key.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.ReplaceRectangularFromBuffer(System.Int64,Windows.Storage.Streams.IBuffer)">
            <summary>Replace the selection with text like a rectangular paste.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.ReplaceRectangular(System.Int64,System.String)">
            <summary>Replace the selection with text like a rectangular paste.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.SelectionDuplicate">
            <summary>Duplicate the selection. If selection empty duplicate the line containing the caret.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.IndicatorFillRange(System.Int64,System.Int64)">
            <summary>Turn a indicator on over a range.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.IndicatorClearRange(System.Int64,System.Int64)">
            <summary>Turn a indicator off over a range.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.IndicatorAllOnFor(System.Int64)">
            <summary>Are any indicators present at pos?</summary>
        </member>
        <member name="M:WinUIEditor.Editor.IndicatorValueAt(System.Int32,System.Int64)">
            <summary>What value does a particular indicator have at a position?</summary>
        </member>
        <member name="M:WinUIEditor.Editor.IndicatorStart(System.Int32,System.Int64)">
            <summary>Where does a particular indicator start?</summary>
        </member>
        <member name="M:WinUIEditor.Editor.IndicatorEnd(System.Int32,System.Int64)">
            <summary>Where does a particular indicator end?</summary>
        </member>
        <member name="M:WinUIEditor.Editor.CopyAllowLine">
            <summary>Copy the selection, if selection empty copy the line with the caret</summary>
        </member>
        <member name="M:WinUIEditor.Editor.CutAllowLine">
            <summary>Cut the selection, if selection empty cut the line with the caret</summary>
        </member>
        <member name="M:WinUIEditor.Editor.MarkerSymbolDefined(System.Int32)">
            <summary>Which symbol was defined for markerNumber with MarkerDefine</summary>
        </member>
        <member name="M:WinUIEditor.Editor.MarginTextClearAll">
            <summary>Clear the margin text on all lines</summary>
        </member>
        <member name="M:WinUIEditor.Editor.AnnotationClearAll">
            <summary>Clear the annotations from all lines</summary>
        </member>
        <member name="M:WinUIEditor.Editor.ReleaseAllExtendedStyles">
            <summary>Release all extended (&gt;255) style numbers</summary>
        </member>
        <member name="M:WinUIEditor.Editor.AllocateExtendedStyles(System.Int32)">
            <summary>Allocate some extended (&gt;255) style numbers and return the start of the range</summary>
        </member>
        <member name="M:WinUIEditor.Editor.AddUndoAction(System.Int32,WinUIEditor.UndoFlags)">
            <summary>Add a container action to the undo stack</summary>
        </member>
        <member name="M:WinUIEditor.Editor.CharPositionFromPoint(System.Int32,System.Int32)">
            <summary>Find the position of a character from a point within the window.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.CharPositionFromPointClose(System.Int32,System.Int32)">
            <summary>Find the position of a character from a point within the window.
Return INVALID_POSITION if not close to text.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.ClearSelections">
            <summary>Clear selections to a single empty stream selection</summary>
        </member>
        <member name="M:WinUIEditor.Editor.SetSelection(System.Int64,System.Int64)">
            <summary>Set a simple selection</summary>
        </member>
        <member name="M:WinUIEditor.Editor.AddSelection(System.Int64,System.Int64)">
            <summary>Add a selection</summary>
        </member>
        <member name="M:WinUIEditor.Editor.SelectionFromPoint(System.Int32,System.Int32)">
            <summary>Find the selection index for a point. -1 when not at a selection.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.DropSelectionN(System.Int32)">
            <summary>Drop one selection</summary>
        </member>
        <member name="M:WinUIEditor.Editor.RotateSelection">
            <summary>Set the main selection to the next selection.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.SwapMainAnchorCaret">
            <summary>Swap that caret and anchor of the main selection.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.MultipleSelectAddNext">
            <summary>Add the next occurrence of the main selection to the set of selections as main.
If the current selection is empty then select word around caret.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.MultipleSelectAddEach">
            <summary>Add each occurrence of the main selection in the target to the set of selections.
If the current selection is empty then select word around caret.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.ChangeLexerState(System.Int64,System.Int64)">
            <summary>Indicate that the internal state of a lexer has changed over a range and therefore
there may be a need to redraw.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.ContractedFoldNext(System.Int64)">
            <summary>Find the next line at or after lineStart that is a contracted fold header line.
Return -1 when no more lines.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.VerticalCentreCaret">
            <summary>Centre current line in window.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.MoveSelectedLinesUp">
            <summary>Move the selected lines up one line, shifting the line above after the selection</summary>
        </member>
        <member name="M:WinUIEditor.Editor.MoveSelectedLinesDown">
            <summary>Move the selected lines down one line, shifting the line below before the selection</summary>
        </member>
        <member name="M:WinUIEditor.Editor.MarkerDefineRGBAImageFromBuffer(System.Int32,Windows.Storage.Streams.IBuffer)">
            <summary>Define a marker from RGBA data.
It has the width and height from RGBAImageSetWidth/Height</summary>
        </member>
        <member name="M:WinUIEditor.Editor.MarkerDefineRGBAImage(System.Int32,System.String)">
            <summary>Define a marker from RGBA data.
It has the width and height from RGBAImageSetWidth/Height</summary>
        </member>
        <member name="M:WinUIEditor.Editor.RegisterRGBAImageFromBuffer(System.Int32,Windows.Storage.Streams.IBuffer)">
            <summary>Register an RGBA image for use in autocompletion lists.
It has the width and height from RGBAImageSetWidth/Height</summary>
        </member>
        <member name="M:WinUIEditor.Editor.RegisterRGBAImage(System.Int32,System.String)">
            <summary>Register an RGBA image for use in autocompletion lists.
It has the width and height from RGBAImageSetWidth/Height</summary>
        </member>
        <member name="M:WinUIEditor.Editor.ScrollToStart">
            <summary>Scroll to start of document.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.ScrollToEnd">
            <summary>Scroll to end of document.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.CreateLoader(System.Int64,WinUIEditor.DocumentOption)">
            <summary>Create an ILoader*.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.FindIndicatorShow(System.Int64,System.Int64)">
            <summary>On macOS, show a find indicator.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.FindIndicatorFlash(System.Int64,System.Int64)">
            <summary>On macOS, flash a find indicator, then fade out.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.FindIndicatorHide">
            <summary>On macOS, hide the find indicator.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.VCHomeDisplay">
            <summary>Move caret to before first visible character on display line.
If already there move to first character on display line.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.VCHomeDisplayExtend">
            <summary>Like VCHomeDisplay but extending selection to new caret position.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.ClearRepresentationFromBuffer(Windows.Storage.Streams.IBuffer)">
            <summary>Remove a character representation.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.ClearRepresentation(System.String)">
            <summary>Remove a character representation.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.ClearAllRepresentations">
            <summary>Clear representations to default.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.EOLAnnotationClearAll">
            <summary>Clear the end of annotations from all lines</summary>
        </member>
        <member name="M:WinUIEditor.Editor.AllocateLineCharacterIndex(WinUIEditor.LineCharacterIndexType)">
            <summary>Request line character index be created or its use count increased.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.ReleaseLineCharacterIndex(WinUIEditor.LineCharacterIndexType)">
            <summary>Decrease use count of line character index and remove if 0.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.LineFromIndexPosition(System.Int64,WinUIEditor.LineCharacterIndexType)">
            <summary>Retrieve the document line containing a position measured in index units.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.IndexPositionFromLine(System.Int64,WinUIEditor.LineCharacterIndexType)">
            <summary>Retrieve the position measured in index units at the start of a document line.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.StartRecord">
            <summary>Start notifying the container of all key presses and commands.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.StopRecord">
            <summary>Stop notifying the container of all key presses and commands.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.Colourise(System.Int64,System.Int64)">
            <summary>Colourise a segment of the document using the current lexing language.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.PrivateLexerCall(System.Int32,System.UInt64)">
            <summary>For private communication between an application and a known lexer.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.PropertyNamesWriteBuffer(Windows.Storage.Streams.IBuffer)">
            <summary>Retrieve a &apos;\n&apos; separated list of properties understood by the current lexer.
Result is NUL-terminated.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.PropertyNames">
            <summary>Retrieve a &apos;\n&apos; separated list of properties understood by the current lexer.
Result is NUL-terminated.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.PropertyTypeFromBuffer(Windows.Storage.Streams.IBuffer)">
            <summary>Retrieve the type of a property.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.PropertyType(System.String)">
            <summary>Retrieve the type of a property.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.DescribePropertyWriteBuffer(Windows.Storage.Streams.IBuffer,Windows.Storage.Streams.IBuffer)">
            <summary>Describe a property.
Result is NUL-terminated.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.DescribeProperty(System.String)">
            <summary>Describe a property.
Result is NUL-terminated.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.DescribeKeyWordSetsWriteBuffer(Windows.Storage.Streams.IBuffer)">
            <summary>Retrieve a &apos;\n&apos; separated list of descriptions of the keyword sets understood by the current lexer.
Result is NUL-terminated.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.DescribeKeyWordSets">
            <summary>Retrieve a &apos;\n&apos; separated list of descriptions of the keyword sets understood by the current lexer.
Result is NUL-terminated.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.AllocateSubStyles(System.Int32,System.Int32)">
            <summary>Allocate a set of sub styles for a particular base style, returning start of range</summary>
        </member>
        <member name="M:WinUIEditor.Editor.FreeSubStyles">
            <summary>Free allocated sub styles</summary>
        </member>
        <member name="M:WinUIEditor.Editor.NameOfStyleWriteBuffer(System.Int32,Windows.Storage.Streams.IBuffer)">
            <summary>Retrieve the name of a style.
Result is NUL-terminated.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.NameOfStyle(System.Int32)">
            <summary>Retrieve the name of a style.
Result is NUL-terminated.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.TagsOfStyleWriteBuffer(System.Int32,Windows.Storage.Streams.IBuffer)">
            <summary>Retrieve a &apos; &apos; separated list of style tags like &quot;literal quoted string&quot;.
Result is NUL-terminated.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.TagsOfStyle(System.Int32)">
            <summary>Retrieve a &apos; &apos; separated list of style tags like &quot;literal quoted string&quot;.
Result is NUL-terminated.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.DescriptionOfStyleWriteBuffer(System.Int32,Windows.Storage.Streams.IBuffer)">
            <summary>Retrieve a description of a style.
Result is NUL-terminated.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.DescriptionOfStyle(System.Int32)">
            <summary>Retrieve a description of a style.
Result is NUL-terminated.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.GetCharAt(System.Int64)">
            <summary>Returns the character byte at the position.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.GetStyleAt(System.Int64)">
            <summary>Returns the style byte at the position.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.GetStyleIndexAt(System.Int64)">
            <summary>Returns the unsigned style byte at the position.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.GetFontLocaleWriteBuffer(Windows.Storage.Streams.IBuffer)">
            <summary>Get the locale for displaying text.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.GetFontLocale">
            <summary>Get the locale for displaying text.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.MarkerGetLayer(System.Int32)">
            <summary>Get the layer used for a marker that is drawn in the text area, not the margin.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.GetMarginTypeN(System.Int32)">
            <summary>Retrieve the type of a margin.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.GetMarginWidthN(System.Int32)">
            <summary>Retrieve the width of a margin in pixels.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.GetMarginMaskN(System.Int32)">
            <summary>Retrieve the marker mask of a margin.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.GetMarginSensitiveN(System.Int32)">
            <summary>Retrieve the mouse click sensitivity of a margin.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.GetMarginCursorN(System.Int32)">
            <summary>Retrieve the cursor shown in a margin.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.GetMarginBackN(System.Int32)">
            <summary>Retrieve the background colour of a margin</summary>
        </member>
        <member name="M:WinUIEditor.Editor.StyleGetFore(System.Int32)">
            <summary>Get the foreground colour of a style.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.StyleGetBack(System.Int32)">
            <summary>Get the background colour of a style.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.StyleGetBold(System.Int32)">
            <summary>Get is a style bold or not.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.StyleGetItalic(System.Int32)">
            <summary>Get is a style italic or not.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.StyleGetSize(System.Int32)">
            <summary>Get the size of characters of a style.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.StyleGetFontWriteBuffer(System.Int32,Windows.Storage.Streams.IBuffer)">
            <summary>Get the font of a style.
Returns the length of the fontName
Result is NUL-terminated.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.StyleGetFont(System.Int32)">
            <summary>Get the font of a style.
Returns the length of the fontName
Result is NUL-terminated.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.StyleGetEOLFilled(System.Int32)">
            <summary>Get is a style to have its end of line filled or not.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.StyleGetUnderline(System.Int32)">
            <summary>Get is a style underlined or not.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.StyleGetCase(System.Int32)">
            <summary>Get is a style mixed case, or to force upper or lower case.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.StyleGetCharacterSet(System.Int32)">
            <summary>Get the character get of the font in a style.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.StyleGetVisible(System.Int32)">
            <summary>Get is a style visible or not.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.StyleGetChangeable(System.Int32)">
            <summary>Get is a style changeable or not (read only).
Experimental feature, currently buggy.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.StyleGetHotSpot(System.Int32)">
            <summary>Get is a style a hotspot or not.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.StyleGetSizeFractional(System.Int32)">
            <summary>Get the size of characters of a style in points multiplied by 100</summary>
        </member>
        <member name="M:WinUIEditor.Editor.StyleGetWeight(System.Int32)">
            <summary>Get the weight of characters of a style.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.StyleGetCheckMonospaced(System.Int32)">
            <summary>Get whether a style may be monospaced.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.StyleGetStretch(System.Int32)">
            <summary>Get the stretch of characters of a style.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.StyleGetInvisibleRepresentationWriteBuffer(System.Int32,Windows.Storage.Streams.IBuffer)">
            <summary>Get the invisible representation for a style.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.StyleGetInvisibleRepresentation(System.Int32)">
            <summary>Get the invisible representation for a style.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.GetElementColour(WinUIEditor.Element)">
            <summary>Get the colour of an element.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.GetElementIsSet(WinUIEditor.Element)">
            <summary>Get whether an element has been set by SetElementColour.
When false, a platform-defined or default colour is used.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.GetElementAllowsTranslucent(WinUIEditor.Element)">
            <summary>Get whether an element supports translucency.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.GetElementBaseColour(WinUIEditor.Element)">
            <summary>Get the colour of an element.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.GetWordCharsWriteBuffer(Windows.Storage.Streams.IBuffer)">
            <summary>Get the set of characters making up words for when moving or selecting by word.
Returns the number of characters</summary>
        </member>
        <member name="M:WinUIEditor.Editor.GetWordChars">
            <summary>Get the set of characters making up words for when moving or selecting by word.
Returns the number of characters</summary>
        </member>
        <member name="M:WinUIEditor.Editor.GetUndoActionType(System.Int32)">
            <summary>What is the type of an action?</summary>
        </member>
        <member name="M:WinUIEditor.Editor.GetUndoActionPosition(System.Int32)">
            <summary>What is the position of an action?</summary>
        </member>
        <member name="M:WinUIEditor.Editor.GetUndoActionTextWriteBuffer(System.Int32,Windows.Storage.Streams.IBuffer)">
            <summary>What is the text of an action?</summary>
        </member>
        <member name="M:WinUIEditor.Editor.GetUndoActionText(System.Int32)">
            <summary>What is the text of an action?</summary>
        </member>
        <member name="M:WinUIEditor.Editor.IndicGetStyle(System.Int32)">
            <summary>Retrieve the style of an indicator.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.IndicGetFore(System.Int32)">
            <summary>Retrieve the foreground colour of an indicator.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.IndicGetUnder(System.Int32)">
            <summary>Retrieve whether indicator drawn under or over text.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.IndicGetHoverStyle(System.Int32)">
            <summary>Retrieve the hover style of an indicator.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.IndicGetHoverFore(System.Int32)">
            <summary>Retrieve the foreground hover colour of an indicator.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.IndicGetFlags(System.Int32)">
            <summary>Retrieve the attributes of an indicator.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.IndicGetStrokeWidth(System.Int32)">
            <summary>Retrieve the stroke width of an indicator.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.GetLineState(System.Int64)">
            <summary>Retrieve the extra styling information for a line.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.GetLineIndentation(System.Int64)">
            <summary>Retrieve the number of columns that a line is indented.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.GetLineIndentPosition(System.Int64)">
            <summary>Retrieve the position before the first non indentation character on a line.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.GetColumn(System.Int64)">
            <summary>Retrieve the column number of a position, taking tab width into account.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.GetLineEndPosition(System.Int64)">
            <summary>Get the position after the last visible characters on a line.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.GetTargetTextWriteBuffer(Windows.Storage.Streams.IBuffer)">
            <summary>Retrieve the text in the target.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.GetTargetText">
            <summary>Retrieve the text in the target.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.GetFoldLevel(System.Int64)">
            <summary>Retrieve the fold level of a line.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.GetLastChild(System.Int64,WinUIEditor.FoldLevel)">
            <summary>Find the last child line of a header line.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.GetFoldParent(System.Int64)">
            <summary>Find the parent line of a child line.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.GetLineVisible(System.Int64)">
            <summary>Is a line visible?</summary>
        </member>
        <member name="M:WinUIEditor.Editor.GetFoldExpanded(System.Int64)">
            <summary>Is a header line expanded?</summary>
        </member>
        <member name="M:WinUIEditor.Editor.GetTagWriteBuffer(System.Int32,Windows.Storage.Streams.IBuffer)">
            <summary>Retrieve the value of a tag from a regular expression search.
Result is NUL-terminated.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.GetTag(System.Int32)">
            <summary>Retrieve the value of a tag from a regular expression search.
Result is NUL-terminated.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.GetMultiEdgeColumn(System.Int32)">
            <summary>Get multi edge positions.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.GetHotspotActiveFore">
            <summary>Get the fore colour for active hotspots.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.GetHotspotActiveBack">
            <summary>Get the back colour for active hotspots.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.GetWhitespaceCharsWriteBuffer(Windows.Storage.Streams.IBuffer)">
            <summary>Get the set of characters making up whitespace for when moving or selecting by word.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.GetWhitespaceChars">
            <summary>Get the set of characters making up whitespace for when moving or selecting by word.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.GetPunctuationCharsWriteBuffer(Windows.Storage.Streams.IBuffer)">
            <summary>Get the set of characters making up punctuation characters</summary>
        </member>
        <member name="M:WinUIEditor.Editor.GetPunctuationChars">
            <summary>Get the set of characters making up punctuation characters</summary>
        </member>
        <member name="M:WinUIEditor.Editor.AutoCGetCurrentTextWriteBuffer(Windows.Storage.Streams.IBuffer)">
            <summary>Get currently selected item text in the auto-completion list
Returns the length of the item text
Result is NUL-terminated.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.AutoCGetCurrentText">
            <summary>Get currently selected item text in the auto-completion list
Returns the length of the item text
Result is NUL-terminated.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.GetCopySeparatorWriteBuffer(Windows.Storage.Streams.IBuffer)">
            <summary>Get the string to separate parts when copying a multiple selection.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.GetCopySeparator">
            <summary>Get the string to separate parts when copying a multiple selection.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.GetRangePointer(System.Int64,System.Int64)">
            <summary>Return a read-only pointer to a range of characters in the document.
May move the gap so that the range is contiguous, but will only move up
to lengthRange bytes.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.IndicGetAlpha(System.Int32)">
            <summary>Get the alpha fill colour of the given indicator.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.IndicGetOutlineAlpha(System.Int32)">
            <summary>Get the alpha outline colour of the given indicator.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.MarginGetTextWriteBuffer(System.Int64,Windows.Storage.Streams.IBuffer)">
            <summary>Get the text in the text margin for a line</summary>
        </member>
        <member name="M:WinUIEditor.Editor.MarginGetText(System.Int64)">
            <summary>Get the text in the text margin for a line</summary>
        </member>
        <member name="M:WinUIEditor.Editor.MarginGetStyle(System.Int64)">
            <summary>Get the style number for the text margin for a line</summary>
        </member>
        <member name="M:WinUIEditor.Editor.MarginGetStylesWriteBuffer(System.Int64,Windows.Storage.Streams.IBuffer)">
            <summary>Get the styles in the text margin for a line</summary>
        </member>
        <member name="M:WinUIEditor.Editor.MarginGetStyles(System.Int64)">
            <summary>Get the styles in the text margin for a line</summary>
        </member>
        <member name="M:WinUIEditor.Editor.AnnotationGetTextWriteBuffer(System.Int64,Windows.Storage.Streams.IBuffer)">
            <summary>Get the annotation text for a line</summary>
        </member>
        <member name="M:WinUIEditor.Editor.AnnotationGetText(System.Int64)">
            <summary>Get the annotation text for a line</summary>
        </member>
        <member name="M:WinUIEditor.Editor.AnnotationGetStyle(System.Int64)">
            <summary>Get the style number for the annotations for a line</summary>
        </member>
        <member name="M:WinUIEditor.Editor.AnnotationGetStylesWriteBuffer(System.Int64,Windows.Storage.Streams.IBuffer)">
            <summary>Get the annotation styles for a line</summary>
        </member>
        <member name="M:WinUIEditor.Editor.AnnotationGetStyles(System.Int64)">
            <summary>Get the annotation styles for a line</summary>
        </member>
        <member name="M:WinUIEditor.Editor.AnnotationGetLines(System.Int64)">
            <summary>Get the number of annotation lines for a line</summary>
        </member>
        <member name="M:WinUIEditor.Editor.GetSelectionNCaret(System.Int32)">
            <summary>Return the caret position of the nth selection.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.GetSelectionNAnchor(System.Int32)">
            <summary>Return the anchor position of the nth selection.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.GetSelectionNCaretVirtualSpace(System.Int32)">
            <summary>Return the virtual space of the caret of the nth selection.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.GetSelectionNAnchorVirtualSpace(System.Int32)">
            <summary>Return the virtual space of the anchor of the nth selection.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.GetSelectionNStart(System.Int32)">
            <summary>Returns the position at the start of the selection.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.GetSelectionNStartVirtualSpace(System.Int32)">
            <summary>Returns the virtual space at the start of the selection.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.GetSelectionNEndVirtualSpace(System.Int32)">
            <summary>Returns the virtual space at the end of the selection.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.GetSelectionNEnd(System.Int32)">
            <summary>Returns the position at the end of the selection.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.GetRepresentationWriteBuffer(Windows.Storage.Streams.IBuffer,Windows.Storage.Streams.IBuffer)">
            <summary>Get the way a character is drawn.
Result is NUL-terminated.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.GetRepresentation(System.String)">
            <summary>Get the way a character is drawn.
Result is NUL-terminated.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.GetRepresentationAppearanceFromBuffer(Windows.Storage.Streams.IBuffer)">
            <summary>Get the appearance of a representation.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.GetRepresentationAppearance(System.String)">
            <summary>Get the appearance of a representation.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.GetRepresentationColourFromBuffer(Windows.Storage.Streams.IBuffer)">
            <summary>Get the colour of a representation.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.GetRepresentationColour(System.String)">
            <summary>Get the colour of a representation.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.EOLAnnotationGetTextWriteBuffer(System.Int64,Windows.Storage.Streams.IBuffer)">
            <summary>Get the end of line annotation text for a line</summary>
        </member>
        <member name="M:WinUIEditor.Editor.EOLAnnotationGetText(System.Int64)">
            <summary>Get the end of line annotation text for a line</summary>
        </member>
        <member name="M:WinUIEditor.Editor.EOLAnnotationGetStyle(System.Int64)">
            <summary>Get the style number for the end of line annotations for a line</summary>
        </member>
        <member name="M:WinUIEditor.Editor.SupportsFeature(WinUIEditor.Supports)">
            <summary>Get whether a feature is supported</summary>
        </member>
        <member name="M:WinUIEditor.Editor.GetPropertyWriteBuffer(Windows.Storage.Streams.IBuffer,Windows.Storage.Streams.IBuffer)">
            <summary>Retrieve a &quot;property&quot; value previously set with SetProperty.
Result is NUL-terminated.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.GetProperty(System.String)">
            <summary>Retrieve a &quot;property&quot; value previously set with SetProperty.
Result is NUL-terminated.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.GetPropertyExpandedWriteBuffer(Windows.Storage.Streams.IBuffer,Windows.Storage.Streams.IBuffer)">
            <summary>Retrieve a &quot;property&quot; value previously set with SetProperty,
with &quot;$()&quot; variable replacement on returned buffer.
Result is NUL-terminated.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.GetPropertyExpanded(System.String)">
            <summary>Retrieve a &quot;property&quot; value previously set with SetProperty,
with &quot;$()&quot; variable replacement on returned buffer.
Result is NUL-terminated.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.GetPropertyIntFromBuffer(Windows.Storage.Streams.IBuffer,System.Int32)">
            <summary>Retrieve a &quot;property&quot; value previously set with SetProperty,
interpreted as an int AFTER any &quot;$()&quot; variable replacement.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.GetPropertyInt(System.String,System.Int32)">
            <summary>Retrieve a &quot;property&quot; value previously set with SetProperty,
interpreted as an int AFTER any &quot;$()&quot; variable replacement.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.GetLexerLanguageWriteBuffer(Windows.Storage.Streams.IBuffer)">
            <summary>Retrieve the name of the lexer.
Return the length of the text.
Result is NUL-terminated.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.GetLexerLanguage">
            <summary>Retrieve the name of the lexer.
Return the length of the text.
Result is NUL-terminated.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.GetSubStylesStart(System.Int32)">
            <summary>The starting style number for the sub styles associated with a base style</summary>
        </member>
        <member name="M:WinUIEditor.Editor.GetSubStylesLength(System.Int32)">
            <summary>The number of sub styles associated with a base style</summary>
        </member>
        <member name="M:WinUIEditor.Editor.GetStyleFromSubStyle(System.Int32)">
            <summary>For a sub style, return the base style, else return the argument.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.GetPrimaryStyleFromStyle(System.Int32)">
            <summary>For a secondary style, return the primary style, else return the argument.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.GetSubStyleBasesWriteBuffer(Windows.Storage.Streams.IBuffer)">
            <summary>Get the set of base styles that can be extended with sub styles
Result is NUL-terminated.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.GetSubStyleBases">
            <summary>Get the set of base styles that can be extended with sub styles
Result is NUL-terminated.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.SetFontLocaleFromBuffer(Windows.Storage.Streams.IBuffer)">
            <summary>Set the locale for displaying text.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.SetFontLocale(System.String)">
            <summary>Set the locale for displaying text.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.MarkerSetFore(System.Int32,System.Int32)">
            <summary>Set the foreground colour used for a particular marker number.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.MarkerSetBack(System.Int32,System.Int32)">
            <summary>Set the background colour used for a particular marker number.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.MarkerSetBackSelected(System.Int32,System.Int32)">
            <summary>Set the background colour used for a particular marker number when its folding block is selected.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.MarkerSetForeTranslucent(System.Int32,System.Int32)">
            <summary>Set the foreground colour used for a particular marker number.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.MarkerSetBackTranslucent(System.Int32,System.Int32)">
            <summary>Set the background colour used for a particular marker number.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.MarkerSetBackSelectedTranslucent(System.Int32,System.Int32)">
            <summary>Set the background colour used for a particular marker number when its folding block is selected.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.MarkerSetStrokeWidth(System.Int32,System.Int32)">
            <summary>Set the width of strokes used in .01 pixels so 50  = 1/2 pixel width.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.MarkerSetAlpha(System.Int32,WinUIEditor.Alpha)">
            <summary>Set the alpha used for a marker that is drawn in the text area, not the margin.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.MarkerSetLayer(System.Int32,WinUIEditor.Layer)">
            <summary>Set the layer used for a marker that is drawn in the text area, not the margin.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.SetMarginTypeN(System.Int32,WinUIEditor.MarginType)">
            <summary>Set a margin to be either numeric or symbolic.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.SetMarginWidthN(System.Int32,System.Int32)">
            <summary>Set the width of a margin to a width expressed in pixels.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.SetMarginMaskN(System.Int32,System.Int32)">
            <summary>Set a mask that determines which markers are displayed in a margin.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.SetMarginSensitiveN(System.Int32,System.Boolean)">
            <summary>Make a margin sensitive or insensitive to mouse clicks.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.SetMarginCursorN(System.Int32,WinUIEditor.CursorShape)">
            <summary>Set the cursor shown when the mouse is inside a margin.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.SetMarginBackN(System.Int32,System.Int32)">
            <summary>Set the background colour of a margin. Only visible for SC_MARGIN_COLOUR.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.StyleSetFore(System.Int32,System.Int32)">
            <summary>Set the foreground colour of a style.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.StyleSetBack(System.Int32,System.Int32)">
            <summary>Set the background colour of a style.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.StyleSetBold(System.Int32,System.Boolean)">
            <summary>Set a style to be bold or not.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.StyleSetItalic(System.Int32,System.Boolean)">
            <summary>Set a style to be italic or not.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.StyleSetSize(System.Int32,System.Int32)">
            <summary>Set the size of characters of a style.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.StyleSetFontFromBuffer(System.Int32,Windows.Storage.Streams.IBuffer)">
            <summary>Set the font of a style.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.StyleSetFont(System.Int32,System.String)">
            <summary>Set the font of a style.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.StyleSetEOLFilled(System.Int32,System.Boolean)">
            <summary>Set a style to have its end of line filled or not.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.StyleSetUnderline(System.Int32,System.Boolean)">
            <summary>Set a style to be underlined or not.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.StyleSetCase(System.Int32,WinUIEditor.CaseVisible)">
            <summary>Set a style to be mixed case, or to force upper or lower case.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.StyleSetSizeFractional(System.Int32,System.Int32)">
            <summary>Set the size of characters of a style. Size is in points multiplied by 100.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.StyleSetWeight(System.Int32,WinUIEditor.FontWeight)">
            <summary>Set the weight of characters of a style.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.StyleSetCharacterSet(System.Int32,WinUIEditor.CharacterSet)">
            <summary>Set the character set of the font in a style.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.StyleSetHotSpot(System.Int32,System.Boolean)">
            <summary>Set a style to be a hotspot or not.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.StyleSetCheckMonospaced(System.Int32,System.Boolean)">
            <summary>Indicate that a style may be monospaced over ASCII graphics characters which enables optimizations.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.StyleSetStretch(System.Int32,WinUIEditor.FontStretch)">
            <summary>Set the stretch of characters of a style.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.StyleSetInvisibleRepresentationFromBuffer(System.Int32,Windows.Storage.Streams.IBuffer)">
            <summary>Set the invisible representation for a style.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.StyleSetInvisibleRepresentation(System.Int32,System.String)">
            <summary>Set the invisible representation for a style.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.SetElementColour(WinUIEditor.Element,System.Int32)">
            <summary>Set the colour of an element. Translucency (alpha) may or may not be significant
and this may depend on the platform. The alpha byte should commonly be 0xff for opaque.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.StyleSetVisible(System.Int32,System.Boolean)">
            <summary>Set a style to be visible or not.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.SetWordCharsFromBuffer(Windows.Storage.Streams.IBuffer)">
            <summary>Set the set of characters making up words for when moving or selecting by word.
First sets defaults like SetCharsDefault.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.SetWordChars(System.String)">
            <summary>Set the set of characters making up words for when moving or selecting by word.
First sets defaults like SetCharsDefault.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.IndicSetStyle(System.Int32,WinUIEditor.IndicatorStyle)">
            <summary>Set an indicator to plain, squiggle or TT.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.IndicSetFore(System.Int32,System.Int32)">
            <summary>Set the foreground colour of an indicator.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.IndicSetUnder(System.Int32,System.Boolean)">
            <summary>Set an indicator to draw under text or over(default).</summary>
        </member>
        <member name="M:WinUIEditor.Editor.IndicSetHoverStyle(System.Int32,WinUIEditor.IndicatorStyle)">
            <summary>Set a hover indicator to plain, squiggle or TT.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.IndicSetHoverFore(System.Int32,System.Int32)">
            <summary>Set the foreground hover colour of an indicator.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.IndicSetFlags(System.Int32,WinUIEditor.IndicFlag)">
            <summary>Set the attributes of an indicator.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.IndicSetStrokeWidth(System.Int32,System.Int32)">
            <summary>Set the stroke width of an indicator in hundredths of a pixel.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.SetLineState(System.Int64,System.Int32)">
            <summary>Used to hold extra styling information for each line.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.StyleSetChangeable(System.Int32,System.Boolean)">
            <summary>Set a style to be changeable or not (read only).
Experimental feature, currently buggy.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.AutoCSetFillUpsFromBuffer(Windows.Storage.Streams.IBuffer)">
            <summary>Define a set of characters that when typed will cause the autocompletion to
choose the selected item.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.AutoCSetFillUps(System.String)">
            <summary>Define a set of characters that when typed will cause the autocompletion to
choose the selected item.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.SetLineIndentation(System.Int64,System.Int32)">
            <summary>Change the indentation of a line to a number of columns.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.AllocateLines(System.Int64)">
            <summary>Enlarge the number of lines allocated.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.CallTipSetPosStart(System.Int64)">
            <summary>Set the start position in order to change when backspacing removes the calltip.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.CallTipSetBack(System.Int32)">
            <summary>Set the background colour for the call tip.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.CallTipSetFore(System.Int32)">
            <summary>Set the foreground colour for the call tip.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.CallTipSetForeHlt(System.Int32)">
            <summary>Set the foreground colour for the highlighted part of the call tip.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.CallTipUseStyle(System.Int32)">
            <summary>Enable use of STYLE_CALLTIP and set call tip tab size in pixels.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.CallTipSetPosition(System.Boolean)">
            <summary>Set position of calltip, above or below text.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.SetFoldLevel(System.Int64,WinUIEditor.FoldLevel)">
            <summary>Set the fold level of a line.
This encodes an integer level along with flags indicating whether the
line is a header and whether it is effectively white space.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.SetFoldExpanded(System.Int64,System.Boolean)">
            <summary>Show the children of a header line.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.SetFoldFlags(WinUIEditor.FoldFlag)">
            <summary>Set some style options for folding.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.SetHotspotActiveFore(System.Boolean,System.Int32)">
            <summary>Set a fore colour for active hotspots.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.SetHotspotActiveBack(System.Boolean,System.Int32)">
            <summary>Set a back colour for active hotspots.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.SetWhitespaceCharsFromBuffer(Windows.Storage.Streams.IBuffer)">
            <summary>Set the set of characters making up whitespace for when moving or selecting by word.
Should be called after SetWordChars.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.SetWhitespaceChars(System.String)">
            <summary>Set the set of characters making up whitespace for when moving or selecting by word.
Should be called after SetWordChars.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.SetPunctuationCharsFromBuffer(Windows.Storage.Streams.IBuffer)">
            <summary>Set the set of characters making up punctuation characters
Should be called after SetWordChars.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.SetPunctuationChars(System.String)">
            <summary>Set the set of characters making up punctuation characters
Should be called after SetWordChars.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.SetCopySeparatorFromBuffer(Windows.Storage.Streams.IBuffer)">
            <summary>Set the string to separate parts when copying a multiple selection.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.SetCopySeparator(System.String)">
            <summary>Set the string to separate parts when copying a multiple selection.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.IndicSetAlpha(System.Int32,WinUIEditor.Alpha)">
            <summary>Set the alpha fill colour of the given indicator.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.IndicSetOutlineAlpha(System.Int32,WinUIEditor.Alpha)">
            <summary>Set the alpha outline colour of the given indicator.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.MarginSetTextFromBuffer(System.Int64,Windows.Storage.Streams.IBuffer)">
            <summary>Set the text in the text margin for a line</summary>
        </member>
        <member name="M:WinUIEditor.Editor.MarginSetText(System.Int64,System.String)">
            <summary>Set the text in the text margin for a line</summary>
        </member>
        <member name="M:WinUIEditor.Editor.MarginSetStyle(System.Int64,System.Int32)">
            <summary>Set the style number for the text margin for a line</summary>
        </member>
        <member name="M:WinUIEditor.Editor.MarginSetStylesFromBuffer(System.Int64,Windows.Storage.Streams.IBuffer)">
            <summary>Set the style in the text margin for a line</summary>
        </member>
        <member name="M:WinUIEditor.Editor.MarginSetStyles(System.Int64,System.String)">
            <summary>Set the style in the text margin for a line</summary>
        </member>
        <member name="M:WinUIEditor.Editor.AnnotationSetTextFromBuffer(System.Int64,Windows.Storage.Streams.IBuffer)">
            <summary>Set the annotation text for a line</summary>
        </member>
        <member name="M:WinUIEditor.Editor.AnnotationSetText(System.Int64,System.String)">
            <summary>Set the annotation text for a line</summary>
        </member>
        <member name="M:WinUIEditor.Editor.AnnotationSetStyle(System.Int64,System.Int32)">
            <summary>Set the style number for the annotations for a line</summary>
        </member>
        <member name="M:WinUIEditor.Editor.AnnotationSetStylesFromBuffer(System.Int64,Windows.Storage.Streams.IBuffer)">
            <summary>Set the annotation styles for a line</summary>
        </member>
        <member name="M:WinUIEditor.Editor.AnnotationSetStyles(System.Int64,System.String)">
            <summary>Set the annotation styles for a line</summary>
        </member>
        <member name="M:WinUIEditor.Editor.SetSelectionNCaret(System.Int32,System.Int64)">
            <summary>Set the caret position of the nth selection.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.SetSelectionNAnchor(System.Int32,System.Int64)">
            <summary>Set the anchor position of the nth selection.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.SetSelectionNCaretVirtualSpace(System.Int32,System.Int64)">
            <summary>Set the virtual space of the caret of the nth selection.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.SetSelectionNAnchorVirtualSpace(System.Int32,System.Int64)">
            <summary>Set the virtual space of the anchor of the nth selection.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.SetSelectionNStart(System.Int32,System.Int64)">
            <summary>Sets the position that starts the selection - this becomes the anchor.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.SetSelectionNEnd(System.Int32,System.Int64)">
            <summary>Sets the position that ends the selection - this becomes the currentPosition.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.SetAdditionalSelFore(System.Int32)">
            <summary>Set the foreground colour of additional selections.
Must have previously called SetSelFore with non-zero first argument for this to have an effect.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.SetAdditionalSelBack(System.Int32)">
            <summary>Set the background colour of additional selections.
Must have previously called SetSelBack with non-zero first argument for this to have an effect.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.RGBAImageSetWidth(System.Int32)">
            <summary>Set the width for future RGBA image data.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.RGBAImageSetHeight(System.Int32)">
            <summary>Set the height for future RGBA image data.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.RGBAImageSetScale(System.Int32)">
            <summary>Set the scale factor in percent for future RGBA image data.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.SetRepresentationFromBuffer(Windows.Storage.Streams.IBuffer,Windows.Storage.Streams.IBuffer)">
            <summary>Set the way a character is drawn.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.SetRepresentation(System.String,System.String)">
            <summary>Set the way a character is drawn.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.SetRepresentationAppearanceFromBuffer(Windows.Storage.Streams.IBuffer,WinUIEditor.RepresentationAppearance)">
            <summary>Set the appearance of a representation.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.SetRepresentationAppearance(System.String,WinUIEditor.RepresentationAppearance)">
            <summary>Set the appearance of a representation.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.SetRepresentationColourFromBuffer(Windows.Storage.Streams.IBuffer,System.Int32)">
            <summary>Set the colour of a representation.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.SetRepresentationColour(System.String,System.Int32)">
            <summary>Set the colour of a representation.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.EOLAnnotationSetTextFromBuffer(System.Int64,Windows.Storage.Streams.IBuffer)">
            <summary>Set the end of line annotation text for a line</summary>
        </member>
        <member name="M:WinUIEditor.Editor.EOLAnnotationSetText(System.Int64,System.String)">
            <summary>Set the end of line annotation text for a line</summary>
        </member>
        <member name="M:WinUIEditor.Editor.EOLAnnotationSetStyle(System.Int64,System.Int32)">
            <summary>Set the style number for the end of line annotations for a line</summary>
        </member>
        <member name="M:WinUIEditor.Editor.SetPropertyFromBuffer(Windows.Storage.Streams.IBuffer,Windows.Storage.Streams.IBuffer)">
            <summary>Set up a value that may be used by a lexer for some optional feature.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.SetProperty(System.String,System.String)">
            <summary>Set up a value that may be used by a lexer for some optional feature.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.SetKeyWordsFromBuffer(System.Int32,Windows.Storage.Streams.IBuffer)">
            <summary>Set up the key words used by the lexer.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.SetKeyWords(System.Int32,System.String)">
            <summary>Set up the key words used by the lexer.</summary>
        </member>
        <member name="M:WinUIEditor.Editor.SetIdentifiersFromBuffer(System.Int32,Windows.Storage.Streams.IBuffer)">
            <summary>Set the identifiers that are shown in a particular style</summary>
        </member>
        <member name="M:WinUIEditor.Editor.SetIdentifiers(System.Int32,System.String)">
            <summary>Set the identifiers that are shown in a particular style</summary>
        </member>
        <member name="M:WinUIEditor.Editor.SetILexer(System.UInt64)">
            <summary>Set the lexer from an ILexer*.</summary>
        </member>
        <member name="P:WinUIEditor.Editor.Length">
            <summary>Returns the number of bytes in the document.</summary>
        </member>
        <member name="P:WinUIEditor.Editor.CurrentPos">
            <summary>Returns the position of the caret.
Sets the position of the caret.</summary>
        </member>
        <member name="P:WinUIEditor.Editor.Anchor">
            <summary>Returns the position of the opposite end of the selection to the caret.
Set the selection anchor to a position. The anchor is the opposite
end of the selection from the caret.</summary>
        </member>
        <member name="P:WinUIEditor.Editor.UndoCollection">
            <summary>Is undo history being collected?
Choose between collecting actions into the undo
history and discarding them.</summary>
        </member>
        <member name="P:WinUIEditor.Editor.ViewWS">
            <summary>Are white space characters currently visible?
Returns one of SCWS_* constants.
Make white space characters invisible, always visible or visible outside indentation.</summary>
        </member>
        <member name="P:WinUIEditor.Editor.TabDrawMode">
            <summary>Retrieve the current tab draw mode.
Returns one of SCTD_* constants.
Set how tabs are drawn when visible.</summary>
        </member>
        <member name="P:WinUIEditor.Editor.EndStyled">
            <summary>Retrieve the position of the last correctly styled character.</summary>
        </member>
        <member name="P:WinUIEditor.Editor.EOLMode">
            <summary>Retrieve the current end of line mode - one of CRLF, CR, or LF.
Set the current end of line mode.</summary>
        </member>
        <member name="P:WinUIEditor.Editor.BufferedDraw">
            <summary>Is drawing done first into a buffer or direct to the screen?
If drawing is buffered then each line of text is drawn into a bitmap buffer
before drawing it to the screen to avoid flicker.</summary>
        </member>
        <member name="P:WinUIEditor.Editor.TabWidth">
            <summary>Retrieve the visible size of a tab.
Change the visible size of a tab to be a multiple of the width of a space character.</summary>
        </member>
        <member name="P:WinUIEditor.Editor.TabMinimumWidth">
            <summary>Get the minimum visual width of a tab.
Set the minimum visual width of a tab.</summary>
        </member>
        <member name="P:WinUIEditor.Editor.IMEInteraction">
            <summary>Is the IME displayed in a window or inline?
Choose to display the IME in a window or inline.</summary>
        </member>
        <member name="P:WinUIEditor.Editor.Margins">
            <summary>How many margins are there?.
Allocate a non-standard number of margins.</summary>
        </member>
        <member name="P:WinUIEditor.Editor.SelAlpha">
            <summary>Get the alpha of the selection.
Set the alpha of the selection.</summary>
        </member>
        <member name="P:WinUIEditor.Editor.SelEOLFilled">
            <summary>Is the selection end of line filled?
Set the selection to have its end of line filled or not.</summary>
        </member>
        <member name="P:WinUIEditor.Editor.SelectionLayer">
            <summary>Get the layer for drawing selections
Set the layer for drawing selections: either opaquely on base layer or translucently over text</summary>
        </member>
        <member name="P:WinUIEditor.Editor.CaretLineLayer">
            <summary>Get the layer of the background of the line containing the caret.
Set the layer of the background of the line containing the caret.</summary>
        </member>
        <member name="P:WinUIEditor.Editor.CaretLineHighlightSubLine">
            <summary>Get only highlighting subline instead of whole line.
Set only highlighting subline instead of whole line.</summary>
        </member>
        <member name="P:WinUIEditor.Editor.CaretPeriod">
            <summary>Get the time in milliseconds that the caret is on and off.
Get the time in milliseconds that the caret is on and off. 0 = steady on.</summary>
        </member>
        <member name="P:WinUIEditor.Editor.CharacterCategoryOptimization">
            <summary>Get the number of characters to have directly indexed categories
Set the number of characters to have directly indexed categories</summary>
        </member>
        <member name="P:WinUIEditor.Editor.UndoSequence">
            <summary>Is an undo sequence active?</summary>
        </member>
        <member name="P:WinUIEditor.Editor.UndoActions">
            <summary>How many undo actions are in the history?</summary>
        </member>
        <member name="P:WinUIEditor.Editor.UndoSavePoint">
            <summary>Which action is the save point?
Set action as the save point</summary>
        </member>
        <member name="P:WinUIEditor.Editor.UndoDetach">
            <summary>Which action is the detach point?
Set action as the detach point</summary>
        </member>
        <member name="P:WinUIEditor.Editor.UndoTentative">
            <summary>Which action is the tentative point?
Set action as the tentative point</summary>
        </member>
        <member name="P:WinUIEditor.Editor.UndoCurrent">
            <summary>Which action is the current point?
Set action as the current point</summary>
        </member>
        <member name="P:WinUIEditor.Editor.WhitespaceSize">
            <summary>Get the size of the dots used to mark space characters.
Set the size of the dots used to mark space characters.</summary>
        </member>
        <member name="P:WinUIEditor.Editor.MaxLineState">
            <summary>Retrieve the last line number that has line state.</summary>
        </member>
        <member name="P:WinUIEditor.Editor.CaretLineVisible">
            <summary>Is the background of the line containing the caret in a different colour?
Display the background of the line containing the caret in a different colour.</summary>
        </member>
        <member name="P:WinUIEditor.Editor.CaretLineBack">
            <summary>Get the colour of the background of the line containing the caret.
Set the colour of the background of the line containing the caret.</summary>
        </member>
        <member name="P:WinUIEditor.Editor.CaretLineFrame">
            <summary>Retrieve the caret line frame width.
Width = 0 means this option is disabled.
Display the caret line framed.
Set width != 0 to enable this option and width = 0 to disable it.</summary>
        </member>
        <member name="P:WinUIEditor.Editor.AutoCSeparator">
            <summary>Retrieve the auto-completion list separator character.
Change the separator character in the string setting up an auto-completion list.
Default is space but can be changed if items contain space.</summary>
        </member>
        <member name="P:WinUIEditor.Editor.AutoCCancelAtStart">
            <summary>Retrieve whether auto-completion cancelled by backspacing before start.
Should the auto-completion list be cancelled if the user backspaces to a
position before where the box was created.</summary>
        </member>
        <member name="P:WinUIEditor.Editor.AutoCChooseSingle">
            <summary>Retrieve whether a single item auto-completion list automatically choose the item.
Should a single item auto-completion list automatically choose the item.</summary>
        </member>
        <member name="P:WinUIEditor.Editor.AutoCIgnoreCase">
            <summary>Retrieve state of ignore case flag.
Set whether case is significant when performing auto-completion searches.</summary>
        </member>
        <member name="P:WinUIEditor.Editor.AutoCAutoHide">
            <summary>Retrieve whether or not autocompletion is hidden automatically when nothing matches.
Set whether or not autocompletion is hidden automatically when nothing matches.</summary>
        </member>
        <member name="P:WinUIEditor.Editor.AutoCOptions">
            <summary>Retrieve autocompletion options.
Set autocompletion options.</summary>
        </member>
        <member name="P:WinUIEditor.Editor.AutoCDropRestOfWord">
            <summary>Retrieve whether or not autocompletion deletes any word characters
after the inserted text upon completion.
Set whether or not autocompletion deletes any word characters
after the inserted text upon completion.</summary>
        </member>
        <member name="P:WinUIEditor.Editor.AutoCTypeSeparator">
            <summary>Retrieve the auto-completion list type-separator character.
Change the type-separator character in the string setting up an auto-completion list.
Default is &apos;?&apos; but can be changed if items contain &apos;?&apos;.</summary>
        </member>
        <member name="P:WinUIEditor.Editor.AutoCMaxWidth">
            <summary>Get the maximum width, in characters, of auto-completion and user lists.
Set the maximum width, in characters, of auto-completion and user lists.
Set to 0 to autosize to fit longest item, which is the default.</summary>
        </member>
        <member name="P:WinUIEditor.Editor.AutoCMaxHeight">
            <summary>Set the maximum height, in rows, of auto-completion and user lists.
Set the maximum height, in rows, of auto-completion and user lists.
The default is 5 rows.</summary>
        </member>
        <member name="P:WinUIEditor.Editor.AutoCStyle">
            <summary>Get the style number used for auto-completion and user lists fonts.
Set the style number used for auto-completion and user lists fonts.</summary>
        </member>
        <member name="P:WinUIEditor.Editor.Indent">
            <summary>Retrieve indentation size.
Set the number of spaces used for one level of indentation.</summary>
        </member>
        <member name="P:WinUIEditor.Editor.UseTabs">
            <summary>Retrieve whether tabs will be used in indentation.
Indentation will only use space characters if useTabs is false, otherwise
it will use a combination of tabs and spaces.</summary>
        </member>
        <member name="P:WinUIEditor.Editor.HScrollBar">
            <summary>Is the horizontal scroll bar visible?
Show or hide the horizontal scroll bar.</summary>
        </member>
        <member name="P:WinUIEditor.Editor.IndentationGuides">
            <summary>Are the indentation guides visible?
Show or hide indentation guides.</summary>
        </member>
        <member name="P:WinUIEditor.Editor.HighlightGuide">
            <summary>Get the highlighted indentation guide column.
Set the highlighted indentation guide column.
0 = no highlighted guide.</summary>
        </member>
        <member name="P:WinUIEditor.Editor.CodePage">
            <summary>Get the code page used to interpret the bytes of the document as characters.
Set the code page used to interpret the bytes of the document as characters.
The SC_CP_UTF8 value can be used to enter Unicode mode.</summary>
        </member>
        <member name="P:WinUIEditor.Editor.CaretFore">
            <summary>Get the foreground colour of the caret.
Set the foreground colour of the caret.</summary>
        </member>
        <member name="P:WinUIEditor.Editor.ReadOnly">
            <summary>In read-only mode?
Set to read only or read write.</summary>
        </member>
        <member name="P:WinUIEditor.Editor.SelectionStart">
            <summary>Returns the position at the start of the selection.
Sets the position that starts the selection - this becomes the anchor.</summary>
        </member>
        <member name="P:WinUIEditor.Editor.SelectionEnd">
            <summary>Returns the position at the end of the selection.
Sets the position that ends the selection - this becomes the caret.</summary>
        </member>
        <member name="P:WinUIEditor.Editor.PrintMagnification">
            <summary>Returns the print magnification.
Sets the print magnification added to the point size of each style for printing.</summary>
        </member>
        <member name="P:WinUIEditor.Editor.PrintColourMode">
            <summary>Returns the print colour mode.
Modify colours when printing for clearer printed text.</summary>
        </member>
        <member name="P:WinUIEditor.Editor.ChangeHistory">
            <summary>Report change history status.
Enable or disable change history.</summary>
        </member>
        <member name="P:WinUIEditor.Editor.FirstVisibleLine">
            <summary>Retrieve the display line at the top of the display.
Scroll so that a display line is at the top of the display.</summary>
        </member>
        <member name="P:WinUIEditor.Editor.LineCount">
            <summary>Returns the number of lines in the document. There is always at least one.</summary>
        </member>
        <member name="P:WinUIEditor.Editor.MarginLeft">
            <summary>Returns the size in pixels of the left margin.
Sets the size in pixels of the left margin.</summary>
        </member>
        <member name="P:WinUIEditor.Editor.MarginRight">
            <summary>Returns the size in pixels of the right margin.
Sets the size in pixels of the right margin.</summary>
        </member>
        <member name="P:WinUIEditor.Editor.Modify">
            <summary>Is the document different from when it was last saved?</summary>
        </member>
        <member name="P:WinUIEditor.Editor.SelectionHidden" />
        <member name="P:WinUIEditor.Editor.TextLength">
            <summary>Retrieve the number of characters in the document.</summary>
        </member>
        <member name="P:WinUIEditor.Editor.DirectFunction">
            <summary>Retrieve a pointer to a function that processes messages for this Scintilla.</summary>
        </member>
        <member name="P:WinUIEditor.Editor.DirectStatusFunction">
            <summary>Retrieve a pointer to a function that processes messages for this Scintilla and returns status.</summary>
        </member>
        <member name="P:WinUIEditor.Editor.DirectPointer">
            <summary>Retrieve a pointer value to use as the first argument when calling
the function returned by GetDirectFunction.</summary>
        </member>
        <member name="P:WinUIEditor.Editor.Overtype">
            <summary>Returns true if overtype mode is active otherwise false is returned.
Set to overtype (true) or insert mode.</summary>
        </member>
        <member name="P:WinUIEditor.Editor.CaretWidth">
            <summary>Returns the width of the insert mode caret.
Set the width of the insert mode caret.</summary>
        </member>
        <member name="P:WinUIEditor.Editor.TargetStart">
            <summary>Get the position that starts the target.
Sets the position that starts the target which is used for updating the
document without affecting the scroll position.</summary>
        </member>
        <member name="P:WinUIEditor.Editor.TargetStartVirtualSpace">
            <summary>Get the virtual space of the target start
Sets the virtual space of the target start</summary>
        </member>
        <member name="P:WinUIEditor.Editor.TargetEnd">
            <summary>Get the position that ends the target.
Sets the position that ends the target which is used for updating the
document without affecting the scroll position.</summary>
        </member>
        <member name="P:WinUIEditor.Editor.TargetEndVirtualSpace">
            <summary>Get the virtual space of the target end
Sets the virtual space of the target end</summary>
        </member>
        <member name="P:WinUIEditor.Editor.SearchFlags">
            <summary>Get the search flags used by SearchInTarget.
Set the search flags used by SearchInTarget.</summary>
        </member>
        <member name="P:WinUIEditor.Editor.AllLinesVisible">
            <summary>Are all lines visible?</summary>
        </member>
        <member name="P:WinUIEditor.Editor.FoldDisplayTextStyle">
            <summary>Get the style of fold display text.
Set the style of fold display text.</summary>
        </member>
        <member name="P:WinUIEditor.Editor.AutomaticFold">
            <summary>Get automatic folding behaviours.
Set automatic folding behaviours.</summary>
        </member>
        <member name="P:WinUIEditor.Editor.TabIndents">
            <summary>Does a tab pressed when caret is within indentation indent?
Sets whether a tab pressed when caret is within indentation indents.</summary>
        </member>
        <member name="P:WinUIEditor.Editor.BackSpaceUnIndents">
            <summary>Does a backspace pressed when caret is within indentation unindent?
Sets whether a backspace pressed when caret is within indentation unindents.</summary>
        </member>
        <member name="P:WinUIEditor.Editor.MouseDwellTime">
            <summary>Retrieve the time the mouse must sit still to generate a mouse dwell event.
Sets the time the mouse must sit still to generate a mouse dwell event.</summary>
        </member>
        <member name="P:WinUIEditor.Editor.IdleStyling">
            <summary>Retrieve the limits to idle styling.
Sets limits to idle styling.</summary>
        </member>
        <member name="P:WinUIEditor.Editor.WrapMode">
            <summary>Retrieve whether text is word wrapped.
Sets whether text is word wrapped.</summary>
        </member>
        <member name="P:WinUIEditor.Editor.WrapVisualFlags">
            <summary>Retrive the display mode of visual flags for wrapped lines.
Set the display mode of visual flags for wrapped lines.</summary>
        </member>
        <member name="P:WinUIEditor.Editor.WrapVisualFlagsLocation">
            <summary>Retrive the location of visual flags for wrapped lines.
Set the location of visual flags for wrapped lines.</summary>
        </member>
        <member name="P:WinUIEditor.Editor.WrapStartIndent">
            <summary>Retrive the start indent for wrapped lines.
Set the start indent for wrapped lines.</summary>
        </member>
        <member name="P:WinUIEditor.Editor.WrapIndentMode">
            <summary>Retrieve how wrapped sublines are placed. Default is fixed.
Sets how wrapped sublines are placed. Default is fixed.</summary>
        </member>
        <member name="P:WinUIEditor.Editor.LayoutCache">
            <summary>Retrieve the degree of caching of layout information.
Sets the degree of caching of layout information.</summary>
        </member>
        <member name="P:WinUIEditor.Editor.ScrollWidth">
            <summary>Retrieve the document width assumed for scrolling.
Sets the document width assumed for scrolling.</summary>
        </member>
        <member name="P:WinUIEditor.Editor.ScrollWidthTracking">
            <summary>Retrieve whether the scroll width tracks wide lines.
Sets whether the maximum width line displayed is used to set scroll width.</summary>
        </member>
        <member name="P:WinUIEditor.Editor.EndAtLastLine">
            <summary>Retrieve whether the maximum scroll position has the last
line at the bottom of the view.
Sets the scroll range so that maximum scroll position has
the last line at the bottom of the view (default).
Setting this to false allows scrolling one page below the last line.</summary>
        </member>
        <member name="P:WinUIEditor.Editor.VScrollBar">
            <summary>Is the vertical scroll bar visible?
Show or hide the vertical scroll bar.</summary>
        </member>
        <member name="P:WinUIEditor.Editor.PhasesDraw">
            <summary>How many phases is drawing done in?
In one phase draw, text is drawn in a series of rectangular blocks with no overlap.
In two phase draw, text is drawn in a series of lines allowing runs to overlap horizontally.
In multiple phase draw, each element is drawn over the whole drawing area, allowing text
to overlap from one line to the next.</summary>
        </member>
        <member name="P:WinUIEditor.Editor.FontQuality">
            <summary>Retrieve the quality level for text.
Choose the quality level for text from the FontQuality enumeration.</summary>
        </member>
        <member name="P:WinUIEditor.Editor.MultiPaste">
            <summary>Retrieve the effect of pasting when there are multiple selections.
Change the effect of pasting when there are multiple selections.</summary>
        </member>
        <member name="P:WinUIEditor.Editor.Accessibility">
            <summary>Report accessibility status.
Enable or disable accessibility.</summary>
        </member>
        <member name="P:WinUIEditor.Editor.ViewEOL">
            <summary>Are the end of line characters visible?
Make the end of line characters visible or invisible.</summary>
        </member>
        <member name="P:WinUIEditor.Editor.DocPointer">
            <summary>Retrieve a pointer to the document object.
Change the document object used.</summary>
        </member>
        <member name="P:WinUIEditor.Editor.EdgeColumn">
            <summary>Retrieve the column number which text should be kept within.
Set the column number of the edge.
If text goes past the edge then it is highlighted.</summary>
        </member>
        <member name="P:WinUIEditor.Editor.EdgeMode">
            <summary>Retrieve the edge highlight mode.
The edge may be displayed by a line (EDGE_LINE/EDGE_MULTILINE) or by highlighting text that
goes beyond it (EDGE_BACKGROUND) or not displayed at all (EDGE_NONE).</summary>
        </member>
        <member name="P:WinUIEditor.Editor.EdgeColour">
            <summary>Retrieve the colour used in edge indication.
Change the colour used in edge indication.</summary>
        </member>
        <member name="P:WinUIEditor.Editor.LinesOnScreen">
            <summary>Retrieves the number of lines completely visible.</summary>
        </member>
        <member name="P:WinUIEditor.Editor.SelectionIsRectangle">
            <summary>Is the selection rectangular? The alternative is the more common stream selection.</summary>
        </member>
        <member name="P:WinUIEditor.Editor.Zoom">
            <summary>Retrieve the zoom level.
Set the zoom level. This number of points is added to the size of all fonts.
It may be positive to magnify or negative to reduce.</summary>
        </member>
        <member name="P:WinUIEditor.Editor.DocumentOptions">
            <summary>Get which document options are set.</summary>
        </member>
        <member name="P:WinUIEditor.Editor.ModEventMask">
            <summary>Get which document modification events are sent to the container.
Set which document modification events are sent to the container.</summary>
        </member>
        <member name="P:WinUIEditor.Editor.CommandEvents">
            <summary>Get whether command events are sent to the container.
Set whether command events are sent to the container.</summary>
        </member>
        <member name="P:WinUIEditor.Editor.Focus">
            <summary>Get internal focus flag.
Change internal focus flag.</summary>
        </member>
        <member name="P:WinUIEditor.Editor.Status">
            <summary>Get error status.
Change error status - 0 = OK.</summary>
        </member>
        <member name="P:WinUIEditor.Editor.MouseDownCaptures">
            <summary>Get whether mouse gets captured.
Set whether the mouse is captured when its button is pressed.</summary>
        </member>
        <member name="P:WinUIEditor.Editor.MouseWheelCaptures">
            <summary>Get whether mouse wheel can be active outside the window.
Set whether the mouse wheel can be active outside the window.</summary>
        </member>
        <member name="P:WinUIEditor.Editor.Cursor">
            <summary>Get cursor type.
Sets the cursor to one of the SC_CURSOR* values.</summary>
        </member>
        <member name="P:WinUIEditor.Editor.ControlCharSymbol">
            <summary>Get the way control characters are displayed.
Change the way control characters are displayed:
If symbol is &lt; 32, keep the drawn way, else, use the given character.</summary>
        </member>
        <member name="P:WinUIEditor.Editor.XOffset">
            <summary>Get the xOffset (ie, horizontal scroll position).
Set the xOffset (ie, horizontal scroll position).</summary>
        </member>
        <member name="P:WinUIEditor.Editor.PrintWrapMode">
            <summary>Is printing line wrapped?
Set printing to line wrapped (SC_WRAP_WORD) or not line wrapped (SC_WRAP_NONE).</summary>
        </member>
        <member name="P:WinUIEditor.Editor.HotspotActiveUnderline">
            <summary>Get whether underlining for active hotspots.
Enable / Disable underlining active hotspots.</summary>
        </member>
        <member name="P:WinUIEditor.Editor.HotspotSingleLine">
            <summary>Get the HotspotSingleLine property
Limit hotspots to single line so hotspots on two lines don&apos;t merge.</summary>
        </member>
        <member name="P:WinUIEditor.Editor.SelectionMode">
            <summary>Get the mode of the current selection.
Set the selection mode to stream (SC_SEL_STREAM) or rectangular (SC_SEL_RECTANGLE/SC_SEL_THIN) or
by lines (SC_SEL_LINES).</summary>
        </member>
        <member name="P:WinUIEditor.Editor.MoveExtendsSelection">
            <summary>Get whether or not regular caret moves will extend or reduce the selection.
Set whether or not regular caret moves will extend or reduce the selection.</summary>
        </member>
        <member name="P:WinUIEditor.Editor.AutoCCurrent">
            <summary>Get currently selected item position in the auto-completion list</summary>
        </member>
        <member name="P:WinUIEditor.Editor.AutoCCaseInsensitiveBehaviour">
            <summary>Get auto-completion case insensitive behaviour.
Set auto-completion case insensitive behaviour to either prefer case-sensitive matches or have no preference.</summary>
        </member>
        <member name="P:WinUIEditor.Editor.AutoCMulti">
            <summary>Retrieve the effect of autocompleting when there are multiple selections.
Change the effect of autocompleting when there are multiple selections.</summary>
        </member>
        <member name="P:WinUIEditor.Editor.AutoCOrder">
            <summary>Get the way autocompletion lists are ordered.
Set the way autocompletion lists are ordered.</summary>
        </member>
        <member name="P:WinUIEditor.Editor.CaretSticky">
            <summary>Can the caret preferred x position only be changed by explicit movement commands?
Stop the caret preferred x position changing when the user types.</summary>
        </member>
        <member name="P:WinUIEditor.Editor.PasteConvertEndings">
            <summary>Get convert-on-paste setting
Enable/Disable convert-on-paste for line endings</summary>
        </member>
        <member name="P:WinUIEditor.Editor.CaretLineBackAlpha">
            <summary>Get the background alpha of the caret line.
Set background alpha of the caret line.</summary>
        </member>
        <member name="P:WinUIEditor.Editor.CaretStyle">
            <summary>Returns the current style of the caret.
Set the style of the caret to be drawn.</summary>
        </member>
        <member name="P:WinUIEditor.Editor.IndicatorCurrent">
            <summary>Get the current indicator
Set the indicator used for IndicatorFillRange and IndicatorClearRange</summary>
        </member>
        <member name="P:WinUIEditor.Editor.IndicatorValue">
            <summary>Get the current indicator value
Set the value used for IndicatorFillRange</summary>
        </member>
        <member name="P:WinUIEditor.Editor.PositionCache">
            <summary>How many entries are allocated to the position cache?
Set number of entries in position cache</summary>
        </member>
        <member name="P:WinUIEditor.Editor.LayoutThreads">
            <summary>Get maximum number of threads used for layout
Set maximum number of threads used for layout</summary>
        </member>
        <member name="P:WinUIEditor.Editor.CharacterPointer">
            <summary>Compact the document buffer and return a read-only pointer to the
characters in the document.</summary>
        </member>
        <member name="P:WinUIEditor.Editor.GapPosition">
            <summary>Return a position which, to avoid performance costs, should not be within
the range of a call to GetRangePointer.</summary>
        </member>
        <member name="P:WinUIEditor.Editor.ExtraAscent">
            <summary>Get extra ascent for each line
Set extra ascent for each line</summary>
        </member>
        <member name="P:WinUIEditor.Editor.ExtraDescent">
            <summary>Get extra descent for each line
Set extra descent for each line</summary>
        </member>
        <member name="P:WinUIEditor.Editor.MarginStyleOffset">
            <summary>Get the start of the range of style numbers used for margin text
Get the start of the range of style numbers used for margin text</summary>
        </member>
        <member name="P:WinUIEditor.Editor.MarginOptions">
            <summary>Get the margin options.
Set the margin options.</summary>
        </member>
        <member name="P:WinUIEditor.Editor.AnnotationVisible">
            <summary>Get the visibility for the annotations for a view
Set the visibility for the annotations for a view</summary>
        </member>
        <member name="P:WinUIEditor.Editor.AnnotationStyleOffset">
            <summary>Get the start of the range of style numbers used for annotations
Get the start of the range of style numbers used for annotations</summary>
        </member>
        <member name="P:WinUIEditor.Editor.MouseSelectionRectangularSwitch">
            <summary>Whether switching to rectangular mode while selecting with the mouse is allowed.
Set whether switching to rectangular mode while selecting with the mouse is allowed.</summary>
        </member>
        <member name="P:WinUIEditor.Editor.MultipleSelection">
            <summary>Whether multiple selections can be made
Set whether multiple selections can be made</summary>
        </member>
        <member name="P:WinUIEditor.Editor.AdditionalSelectionTyping">
            <summary>Whether typing can be performed into multiple selections
Set whether typing can be performed into multiple selections</summary>
        </member>
        <member name="P:WinUIEditor.Editor.AdditionalCaretsBlink">
            <summary>Whether additional carets will blink
Set whether additional carets will blink</summary>
        </member>
        <member name="P:WinUIEditor.Editor.AdditionalCaretsVisible">
            <summary>Whether additional carets are visible
Set whether additional carets are visible</summary>
        </member>
        <member name="P:WinUIEditor.Editor.Selections">
            <summary>How many selections are there?</summary>
        </member>
        <member name="P:WinUIEditor.Editor.SelectionEmpty">
            <summary>Is every selected range empty?</summary>
        </member>
        <member name="P:WinUIEditor.Editor.MainSelection">
            <summary>Which selection is the main selection
Set the main selection</summary>
        </member>
        <member name="P:WinUIEditor.Editor.RectangularSelectionCaret">
            <summary>Return the caret position of the rectangular selection.
Set the caret position of the rectangular selection.</summary>
        </member>
        <member name="P:WinUIEditor.Editor.RectangularSelectionAnchor">
            <summary>Return the anchor position of the rectangular selection.
Set the anchor position of the rectangular selection.</summary>
        </member>
        <member name="P:WinUIEditor.Editor.RectangularSelectionCaretVirtualSpace">
            <summary>Return the virtual space of the caret of the rectangular selection.
Set the virtual space of the caret of the rectangular selection.</summary>
        </member>
        <member name="P:WinUIEditor.Editor.RectangularSelectionAnchorVirtualSpace">
            <summary>Return the virtual space of the anchor of the rectangular selection.
Set the virtual space of the anchor of the rectangular selection.</summary>
        </member>
        <member name="P:WinUIEditor.Editor.VirtualSpaceOptions">
            <summary>Return options for virtual space behaviour.
Set options for virtual space behaviour.</summary>
        </member>
        <member name="P:WinUIEditor.Editor.RectangularSelectionModifier">
            <summary>Get the modifier key used for rectangular selection.</summary>
        </member>
        <member name="P:WinUIEditor.Editor.AdditionalSelAlpha">
            <summary>Get the alpha of the selection.
Set the alpha of the selection.</summary>
        </member>
        <member name="P:WinUIEditor.Editor.AdditionalCaretFore">
            <summary>Get the foreground colour of additional carets.
Set the foreground colour of additional carets.</summary>
        </member>
        <member name="P:WinUIEditor.Editor.Identifier">
            <summary>Get the identifier.
Set the identifier reported as idFrom in notification messages.</summary>
        </member>
        <member name="P:WinUIEditor.Editor.Technology">
            <summary>Get the tech.
Set the technology used.</summary>
        </member>
        <member name="P:WinUIEditor.Editor.CaretLineVisibleAlways">
            <summary>Is the caret line always visible?
Sets the caret line to always visible.</summary>
        </member>
        <member name="P:WinUIEditor.Editor.LineEndTypesAllowed">
            <summary>Get the line end types currently allowed.
Set the line end types that the application wants to use. May not be used if incompatible with lexer or encoding.</summary>
        </member>
        <member name="P:WinUIEditor.Editor.LineEndTypesActive">
            <summary>Get the line end types currently recognised. May be a subset of the allowed types due to lexer limitation.</summary>
        </member>
        <member name="P:WinUIEditor.Editor.EOLAnnotationVisible">
            <summary>Get the visibility for the end of line annotations for a view
Set the visibility for the end of line annotations for a view</summary>
        </member>
        <member name="P:WinUIEditor.Editor.EOLAnnotationStyleOffset">
            <summary>Get the start of the range of style numbers used for end of line annotations
Get the start of the range of style numbers used for end of line annotations</summary>
        </member>
        <member name="P:WinUIEditor.Editor.LineCharacterIndex">
            <summary>Retrieve line character index state.</summary>
        </member>
        <member name="P:WinUIEditor.Editor.Lexer">
            <summary>Retrieve the lexing language of the document.</summary>
        </member>
        <member name="P:WinUIEditor.Editor.LineEndTypesSupported">
            <summary>Bit set of LineEndType enumertion for which line ends beyond the standard
LF, CR, and CRLF are supported by the lexer.</summary>
        </member>
        <member name="P:WinUIEditor.Editor.DistanceToSecondaryStyles">
            <summary>Where styles are duplicated by a feature such as active/inactive code
return the distance between the two types.</summary>
        </member>
        <member name="P:WinUIEditor.Editor.NamedStyles">
            <summary>Retrieve the number of named styles for the lexer.</summary>
        </member>
        <member name="P:WinUIEditor.Editor.Bidirectional">
            <summary>Retrieve bidirectional text display state.
Set bidirectional text display state.</summary>
        </member>
        <member name="E:WinUIEditor.Editor.StyleNeeded" />
        <member name="E:WinUIEditor.Editor.CharAdded" />
        <member name="E:WinUIEditor.Editor.SavePointReached" />
        <member name="E:WinUIEditor.Editor.SavePointLeft" />
        <member name="E:WinUIEditor.Editor.ModifyAttemptRO" />
        <member name="E:WinUIEditor.Editor.Key">
            <summary>GTK Specific to work around focus and accelerator problems:</summary>
        </member>
        <member name="E:WinUIEditor.Editor.DoubleClick" />
        <member name="E:WinUIEditor.Editor.UpdateUI" />
        <member name="E:WinUIEditor.Editor.Modified" />
        <member name="E:WinUIEditor.Editor.MacroRecord" />
        <member name="E:WinUIEditor.Editor.MarginClick" />
        <member name="E:WinUIEditor.Editor.NeedShown" />
        <member name="E:WinUIEditor.Editor.Painted" />
        <member name="E:WinUIEditor.Editor.UserListSelection" />
        <member name="E:WinUIEditor.Editor.URIDropped" />
        <member name="E:WinUIEditor.Editor.DwellStart" />
        <member name="E:WinUIEditor.Editor.DwellEnd" />
        <member name="E:WinUIEditor.Editor.ZoomChanged" />
        <member name="E:WinUIEditor.Editor.HotSpotClick" />
        <member name="E:WinUIEditor.Editor.HotSpotDoubleClick" />
        <member name="E:WinUIEditor.Editor.CallTipClick" />
        <member name="E:WinUIEditor.Editor.AutoCSelection" />
        <member name="E:WinUIEditor.Editor.IndicatorClick" />
        <member name="E:WinUIEditor.Editor.IndicatorRelease" />
        <member name="E:WinUIEditor.Editor.AutoCCancelled" />
        <member name="E:WinUIEditor.Editor.AutoCCharDeleted" />
        <member name="E:WinUIEditor.Editor.HotSpotReleaseClick" />
        <member name="E:WinUIEditor.Editor.FocusIn" />
        <member name="E:WinUIEditor.Editor.FocusOut" />
        <member name="E:WinUIEditor.Editor.AutoCCompleted" />
        <member name="E:WinUIEditor.Editor.MarginRightClick" />
        <member name="E:WinUIEditor.Editor.AutoCSelectionChange" />
    </members>
</doc>
